{"version":3,"sources":["../../src/common/Performer.js"],"names":["Performer","Object","assign","number","type","BaseTypes","TYPES","INT16","palette","UINT8","ammo","direction","stage","STRING","gridString","xPos","yPos","gameEngine","options","props","class","grid","xStep","yStep","rightBound","playersByRoom","_roomName","length","playerWidth","leftBound","playerHeight","queryNotes","ownerId","playerId","n","move","paint","other","DynamicObject"],"mappings":"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","sourcesContent":["import { BaseTypes, DynamicObject, TwoVector } from 'lance-gg';\n\nexport default class Performer extends DynamicObject {\n\n    static get netScheme() {\n        return Object.assign({\n            number: { type: BaseTypes.TYPES.INT16 },\n            palette: { type: BaseTypes.TYPES.UINT8 },\n            ammo: { type: BaseTypes.TYPES.INT16 },\n            direction: { type: BaseTypes.TYPES.UINT8 },\n            stage: { type: BaseTypes.TYPES.STRING },\n            gridString: { type: BaseTypes.TYPES.STRING },\n            xPos: { type: BaseTypes.TYPES.INT16 },\n            yPos: { type: BaseTypes.TYPES.INT16 }\n        }, super.netScheme);\n    }\n\n    constructor(gameEngine, options, props) {\n        super(gameEngine, options, props);\n\n        this.class = Performer;\n        this.grid = [[]];\n    }\n\n    move(xStep, yStep) {\n        this.xPos += xStep;\n        this.yPos += yStep;\n        let rightBound = this.gameEngine.playersByRoom[this._roomName].length * this.gameEngine.playerWidth;\n        let leftBound = this.gameEngine.playerHeight;\n        if (this.xPos >= rightBound) { this.xPos -= rightBound; }\n        if (this.yPos >= leftBound) { this.yPos -= leftBound; }\n        if (this.xPos < 0) { this.xPos += rightBound; }\n        if (this.yPos < 0) { this.yPos += leftBound; }\n        for (let n of this.gameEngine.queryNotes({ ownerId: this.playerId })) {\n            //console.log(n);\n            n.move(xStep, yStep);\n        }\n    }\n\n    moveTo(xPos, yPos) {\n        let xStep = xPos - this.xPos;\n        let yStep = yPos - this.yPos;\n        this.xPos = xPos;\n        this.yPos = yPos;\n        let rightBound = this.gameEngine.playersByRoom[this._roomName].length * this.gameEngine.playerWidth;\n        let leftBound = this.gameEngine.playerHeight;\n        if (this.xPos >= rightBound) { this.xPos -= rightBound; }\n        if (this.yPos >= leftBound) { this.yPos -= leftBound; }\n        if (this.xPos < 0) { this.xPos += rightBound; }\n        if (this.yPos < 0) { this.yPos += leftBound; }\n        for (let n of this.gameEngine.queryNotes({ ownerId: this.playerId })) {\n            //console.log(n);\n            n.move(xStep, yStep);\n        }\n    }\n\n    paint() {\n        for (let n of this.gameEngine.queryNotes({ ownerId: this.playerId })) {\n            //console.log(n);\n            n.paint();\n        }   \n    }\n\n    syncTo(other) {\n        super.syncTo(other);\n    }\n\n    toString() {\n        return `Performer::${super.toString()} number=${this.number} `;\n    }\n}\n"],"file":"Performer.js"}