{"version":3,"sources":["../../src/client/InterferenceRenderer.js"],"names":["paletteTable","bg","c1","c2","c3","c4","animLengths","eggSpawn","eggBreak","eggNote","game","client","canvas","ctx","w","h","leftViewBound","rightViewBound","time","players","playerId","thisPlayer","sequences","eggs","InterferenceRenderer","gameEngine","clientEngine","document","createElement","getContext","width","window","innerWidth","height","innerHeight","body","insertBefore","getElementById","addEventListener","setRendererSize","t","dt","room","syncClient","getSyncTime","world","queryObject","queryObjects","instanceType","Performer","performanceView","xPos","playerWidth","length","Egg","palette","clearRect","save","drawPlayers","drawSequences","drawEggs","fillStyle","strokeStyle","strokeWeight","font","Number","toFixed","fillText","strokeText","number","drawImage","restore","n","p","drawPlayer","inView","wrap","x","fillTriangle","i","xDim","gameXDimToCanvasXDim","paletteAttributes","gridWidth","yDim","gameYDimToCanvasYDim","playerHeight","gridHeight","xIdx","grid","yIdx","y","fillColor","fillRect","a","ammo","x1","y1","Object","keys","ownerId","bass","step","drawStep","melody","perc","e","scale","mapToRange","animFrames","spawn","strokeColor","dimX","eggRadius","dimY","pos","gamePositionToCanvasPosition","position","hp","sound","fillEllipse","Math","PI","fillQuad","drawBrokenEgg","drawNote","shift","cellToCanvasPosition","yPos","c","layer","animFrame","dur","melodyStep","bassStep","x2","y2","x3","y3","x4","y4","percStep","gameX","gameY","div","hi","canvasX","floor","canvasY","cellX","cellY","cellsXPerPlayer","cellsYPerPlayer","val","l1","h1","l2","h2","radiusX","radiusY","stroke","gapX","break","gapY","weight","lineWidth","pal","which","rotation","startAngle","endAngle","beginPath","ellipse","fill","moveTo","lineTo","closePath","strokeRect","Renderer"],"mappings":"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","sourcesContent":["import { Renderer, TwoVector } from 'lance-gg';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\n\nconst paletteTable = [\n    //'default': \n    {\n        bg: 'black',\n        c1: 'white',\n        c2: 'white',\n        c3: 'white',\n        c4: 'white'\n    },\n    //'rain': \n    {   \n        bg: '#3e2f5b', \n        c1: '#d7dedc',\n        c2: '#706563',\n        c3: '#457eac',\n        c4: '#748386' \n    },\n    //'celeste': \n    {   \n        bg: '#a5d8ff', \n        c1: '#ff8266',\n        c2: '#4381af',\n        c3: '#ac86b0',\n        c4: '#4b719c' \n    },\n    //'pyre': \n    {   \n        bg: '#a32323', \n        c1: '#2375a8',\n        c2: '#fbf6f7',\n        c3: '#f0ae62',\n        c4: '#011936' \n    },\n    //'journey': \n    {   \n        bg: '#fad68a', \n        c1: '#7f2819',\n        c2: '#a25a11',\n        c3: '#d5a962',\n        c4: '#fef8e8' \n    },\n    //'kirby': \n    {   \n        bg: '#a8c256', \n        c1: '#f4a4a7',\n        c2: '#e84c41',\n        c3: '#f9df6a',\n        c4: '#fa8334' \n    }\n]\n\nconst animLengths = {\n    eggSpawn: 20,\n    eggBreak: 30,\n    eggNote: 10\n}\n\nlet game = null;\nlet client = null;\nlet canvas = []\nlet ctx = [];\nlet w = 0;\nlet h = 0;\nlet leftViewBound = 0; // bounds of area to be rendered in game coordinates\nlet rightViewBound = 0;\nlet time = 0;\nlet players = []; \nlet playerId = 0;\nlet thisPlayer = null;\nlet sequences = null;\nlet eggs = [];\n\nlet bg = paletteTable[0].bg;\nlet c1 = paletteTable[0].c1;\nlet c2 = paletteTable[0].c2;\nlet c3 = paletteTable[0].c3;\nlet c4 = paletteTable[0].c4;\n\nexport default class InterferenceRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n\n        game = this.gameEngine;\n        client = this.clientEngine;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n\n        canvas[0] = document.createElement('canvas');\n        ctx[0] = canvas[0].getContext('2d');\n\n\n        canvas[1] = document.createElement('canvas');\n        ctx[1] = canvas[1].getContext('2d');\n\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n\n        document.body.insertBefore(this.canvas, document.getElementById('logo'));\n\n        window.addEventListener('resize', ()=>{ this.setRendererSize(); });\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        if (client.room == null) return;\n\n        time = client.syncClient.getSyncTime();\n        playerId = game.playerId;\n        thisPlayer = game.world.queryObject({ playerId });\n        players = game.world.queryObjects({ instanceType: Performer });\n        if (client.performanceView) {\n            leftViewBound = thisPlayer.xPos;\n            rightViewBound = (leftViewBound + game.playerWidth) % (players.length * game.playerWidth);\n        }\n        else {\n            leftViewBound = 0;\n            rightViewBound = players.length * game.playerWidth;\n        }\n        sequences = client.sequences;\n        eggs = game.world.queryObjects({ instanceType: Egg });\n\n        bg = paletteTable[thisPlayer.palette].bg;\n        c1 = paletteTable[thisPlayer.palette].c1;\n        c2 = paletteTable[thisPlayer.palette].c2;\n        c3 = paletteTable[thisPlayer.palette].c3;\n        c4 = paletteTable[thisPlayer.palette].c4;\n        \n        // Clear the canvas\n        this.ctx.clearRect(0, 0, w, h);\n        ctx[0].clearRect(0, 0, w, h);\n        ctx[1].clearRect(0, 0, w, h);\n\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx[0].save();\n        ctx[1].save();\n        //ctx.scale(this.clientEngine.zoom, this.clientEngine.zoom);  // Zoom in and flip y axis\n        // Draw all things\n        this.drawPlayers();\n        this.drawSequences();\n        this.drawEggs();\n\n        if (!client.performanceView) {\n            ctx[1].fillStyle = 'white';\n            ctx[1].strokeStyle = 'black';\n            this.strokeWeight(1, 1);\n            ctx[1].font = \"20px Lucida Console\";\n            //ctx[1].fillText(playerId, 50, 25);\n            time = Number(time).toFixed(3);\n            ctx[1].fillText(time, w * 0.05, h * 0.95);\n            ctx[1].strokeText(time, w * 0.05, h * 0.95);\n            ctx[1].fillText(thisPlayer.number, w * 0.05, h * 0.85);\n            ctx[1].strokeText(thisPlayer.number, w * 0.05, h * 0.85);\n            //ctx[1].fillText(client.transport.position, 50, 75);\n        }\n\n        this.ctx.drawImage(canvas[0], 0, 0);\n        this.ctx.drawImage(canvas[1], 0, 0);\n\n        ctx[0].restore(); \n        ctx[1].restore();\n    }\n\n    drawPlayers() {\n        let n = players.length;\n        if (client.performanceView) n = 1;\n        for (let p of players) {\n            if (players.length === 1) {\n                this.drawPlayer(p, false);\n                this.drawPlayer(p, true);\n            }\n            else {\n                let inView = true;\n                let wrap = false;\n                if (leftViewBound < rightViewBound) inView = (leftViewBound - game.playerWidth < p.number * game.playerWidth) && \n                                                             (p.number * game.playerWidth < rightViewBound);\n                else {\n                    inView = (leftViewBound - game.playerWidth < p.number * game.playerWidth) || (p.number * game.playerWidth < rightViewBound);\n                    wrap = (p.number * game.playerWidth < rightViewBound);\n                }\n                if (inView) {\n                    this.drawPlayer(p, wrap)\n                }\n            }\n        }\n        let x = (w / n) * (thisPlayer.number + 0.5);\n        ctx[0].fillStyle = 'white';\n        this.fillTriangle(  x,                      (1.05 * h) / n, \n                            x - ((0.25 * w) / n),   (1.15 * h) / n,\n                            x + ((0.25 * w) / n),   (1.15 * h) / n, false, 0 );   \n    }\n\n    drawPlayer(p, wrap) {\n        let n = players.length;\n        if (client.performanceView) n = 1;\n        let i = p.number - (leftViewBound / game.playerWidth);\n        if (wrap) i += players.length;\n        let xDim = this.gameXDimToCanvasXDim(game.playerWidth / game.paletteAttributes[p.palette].gridWidth);\n        let yDim = this.gameYDimToCanvasYDim(game.playerHeight / game.paletteAttributes[p.palette].gridHeight);\n        for (let xIdx = 0; xIdx < p.grid.length; xIdx++) {\n            let x = ((w / n) * i) + (xIdx * xDim);\n            for (let yIdx = 0; yIdx < p.grid[xIdx].length; yIdx++) {\n                let y = yIdx * yDim;\n                this.fillColor(p.grid[xIdx][yIdx], 'bg', 0);\n                this.fillRect(x, y, xDim, yDim, false, 0)\n            }\n        }\n        this.fillColor('default', 'bg', 1);\n        for (let a = 0; a < p.ammo; a++) {\n            let x = ((w / n) * i);\n            let x1 = x + ((a + 1) * ((w / n) / (p.ammo + 1)));\n            let y1 = (h / n) * 0.92;\n            this.fillTriangle(  x1, y1, \n                                x1 - ((0.02 * w) / n), y1 + ((0.04 * h) / n),\n                                x1 + ((0.02 * w) / n), y1 + ((0.04 * h) / n), false, 1);\n        }\n    }\n\n    drawSequences() {\n        this.strokeWeight(2, 0);\n        this.strokeWeight(2, 1);\n        for (let ownerId of Object.keys(sequences)) {\n            if (sequences[ownerId].bass != null) for (let step of sequences[ownerId].bass) if (step != null) this.drawStep(step);\n            if (sequences[ownerId].melody != null) for (let step of sequences[ownerId].melody) if (step != null) this.drawStep(step); \n            if (sequences[ownerId].perc != null) for (let step of sequences[ownerId].perc) if (step != null) this.drawStep(step);                     \n        }\n    }\n\n    drawEggs() {\n        for (let e of eggs) {\n            let scale = this.mapToRange(e.animFrames.spawn, 0, animLengths.eggSpawn, 0.0, 1.0);\n            this.fillColor(0, 'c1', 1);\n            this.strokeColor(0, 'bg', 1);\n            let dimX = this.gameXDimToCanvasXDim(game.eggRadius) * scale;\n            let dimY = this.gameYDimToCanvasYDim(game.eggRadius) * scale;\n            let pos = this.gamePositionToCanvasPosition(e.position.x, e.position.y);\n            let x = pos[0];\n            let y = pos[1];\n            this.strokeWeight((dimX + dimY) * 0.0625, 1);\n            if (e.hp > 0) {\n                if (e.sound === 'melody') {\n                    this.fillEllipse(x, y, dimX, dimY, 0, 0, 2*Math.PI, true, 1);\n                }\n                else if (e.sound === 'bass') {\n                    this.fillRect(x - dimX, y - dimY, dimX * 2, dimY * 2, true, 1);\n                }\n                else if (e.sound === 'perc') {\n                    this.fillQuad(  x - dimX, y, x, y - dimY, \n                                    x + dimX, y, x, y + dimY, true, 1);\n                }\n            }\n            else this.drawBrokenEgg(e, x, y, dimX, dimY, true, 1);\n            if (e.position.x < game.playerWidth) {\n                pos = this.gamePositionToCanvasPosition(e.position.x + (players.length * game.playerWidth), e.position.y);\n                x = pos[0];\n                y = pos[1];\n                this.strokeWeight((dimX + dimY) * 0.0625, 1);\n                if (e.hp > 0) {\n                    if (e.sound === 'melody') {\n                        this.fillEllipse(x, y, dimX, dimY, 0, 0, 2*Math.PI, true, 1);\n                    }\n                    else if (e.sound === 'bass') {\n                        this.fillRect(x - dimX, y - dimY, dimX * 2, dimY * 2, true, 1);\n                    }\n                    else if (e.sound === 'perc') {\n                        this.fillQuad(  x - dimX, y, x, y - dimY, \n                                        x + dimX, y, x, y + dimY, true, 1);\n                    }\n                }\n                else this.drawBrokenEgg(e, x, y, dimX, dimY, true, 1);\n            }\n            if (e.animFrames.spawn < animLengths.eggSpawn) e.animFrames.spawn++;\n        }\n    }\n\n    drawStep(step) {\n        for (let n of step) {\n            if (players.length === 1) {\n                this.drawNote(n, false);\n                this.drawNote(n, true);\n            }\n            else {\n                let inView = true;\n                let wrap = false;\n                if (leftViewBound < rightViewBound) inView = (leftViewBound - game.playerWidth < n.xPos) && (n.xPos < rightViewBound);\n                else {\n                    inView = (leftViewBound - game.playerWidth < n.xPos) || (n.xPos < rightViewBound);\n                    wrap = (n.xPos < rightViewBound);\n                }\n                if (inView) this.drawNote(n, wrap);\n            }\n        }\n    }\n\n    drawNote(n, wrap) {\n        let gridWidth = game.paletteAttributes[n.palette].gridWidth;\n        let gridHeight = game.paletteAttributes[n.palette].gridHeight;\n        let shift = 0;\n        if (wrap) shift = (gridWidth * players.length);\n        let pos = this.cellToCanvasPosition(n.xPos + shift, n.yPos, gridWidth, gridHeight);\n        let dimX = this.gameXDimToCanvasXDim(game.playerWidth / gridWidth); \n        let dimY = this.gameYDimToCanvasYDim(game.playerHeight / gridHeight);\n        let x = pos[0];\n        let y = pos[1];\n        let c = 'bg';\n        let layer = 1;\n        if (n.sound === 'melody') {\n            x += dimX * 0.5;\n            y += dimY * 0.5;\n            //dimX *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridWidth, 1);\n            dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n            c = 'c1';\n            if (n.dur === '2n') { \n                c = 'c2'; \n                dimX *= 2;\n                dimY *= 2;\n                layer = 0; \n            }\n            if (n.step === client.melodyStep) c = 'c4';\n            this.fillColor(n.palette, c, layer);\n            this.strokeColor(n.palette, 'bg', layer);\n            this.fillEllipse(x, y, dimX / 2, dimY / 2, 0, 0, 2*Math.PI, true, layer);\n        }\n        else if (n.sound === 'bass') {\n            y = this.mapToRange(n.animFrame, 0, animLengths.eggNote, 0, y);\n            dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n            c = 'c2';\n            if (n.dur === '2n') { \n                c = 'c3'; \n                dimX *= (gridWidth / 2); \n                layer = 0; \n            }\n            if (n.step === client.bassStep) c = 'c4';\n            this.fillColor(n.palette, c, layer);\n            this.strokeColor(n.palette, 'bg', layer);\n            this.fillRect(x, y, dimX, dimY, true, layer);\n        }\n        else if (n.sound === 'perc') {\n            x += dimX * 0.5;\n            y += dimY * 0.5;\n            dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight / 2, 1);\n            let x1 = x - (dimX * 0.5);\n            let y1 = y;\n            let x2 = x;\n            let y2 = y - (dimY * 0.5);\n            let x3 = x + (dimX * 0.5);\n            let y3 = y;\n            let x4 = x;\n            let y4 = y + (dimY * 0.5);\n            c = 'c3'\n            if (n.dur === '2n') { \n                c = 'c1'; \n                x2 += dimX;\n                x4 -= dimX\n                layer = 0;             \n            }\n            if (n.step === client.percStep) c = 'c4';\n            this.fillColor(n.palette, c, layer);\n            this.strokeColor(n.palette, 'bg', layer);\n            this.fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, true, layer);\n        }   \n        if (n.animFrame < animLengths.eggNote) n.animFrame++;\n    }\n\n    setRendererSize() {\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n    }\n\n    gamePositionToCanvasPosition(gameX, gameY) {\n        let div = players.length;\n        if (client.performanceView) div = 1;\n        let hi = rightViewBound;\n        if (leftViewBound >= rightViewBound) hi += players.length * game.playerWidth;\n        let canvasX = Math.floor(this.mapToRange(gameX, leftViewBound, hi, 0, w));\n        let canvasY = Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / div)); \n        return [canvasX, canvasY];\n    }\n\n    gameXDimToCanvasXDim(gameX) {\n        let div = players.length;\n        if (client.performanceView) div = 1;\n        return this.mapToRange(gameX, 0, game.playerWidth, 0, w / div);\n    }\n\n    gameYDimToCanvasYDim(gameY) {\n        let div = players.length;\n        if (client.performanceView) div = 1;\n        return this.mapToRange(gameY, 0, game.playerHeight, 0, h / div);\n    }\n\n    cellToCanvasPosition(cellX, cellY, cellsXPerPlayer, cellsYPerPlayer) {\n        let gameX = (game.playerWidth / cellsXPerPlayer) * cellX;\n        let gameY = (game.playerHeight / cellsYPerPlayer) * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    playerCellToCanvasPosition(p, cellX, cellY, cellsXPerPlayer, cellsYPerPlayer) {\n        let gameX = (game.playerWidth / cellsXPerPlayer) * (cellX + (p.number * cellsXPerPlayer));\n        let gameY = (game.playerHeight / cellsYPerPlayer) * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    mapToRange(val, l1, h1, l2, h2) {\n        return (l2 + (h2 - l2) * (val - l1) / (h1 - l1));\n    }\n\n    drawBrokenEgg(e, x, y, radiusX, radiusY, stroke, layer) {\n        let gapX = radiusX * (e.animFrames.break / animLengths.eggBreak);\n        let gapY = radiusY * (e.animFrames.break / animLengths.eggBreak);\n        this.fillEllipse(x+gapX, y-gapY, radiusX, radiusY, 0, 0, 0.5*Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y-gapY, radiusX, radiusY, 0, 0.5*Math.PI, Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y+gapY, radiusX, radiusY, 0, Math.PI, 1.5*Math.PI, stroke, layer)\n        this.fillEllipse(x+gapX, y+gapY, radiusX, radiusY, 0, 1.5*Math.PI, 2*Math.PI, stroke, layer)\n        if (e.animFrames.break < animLengths.eggBreak) e.animFrames.break++\n    }\n    \n    strokeWeight(weight, layer) {\n        ctx[layer].lineWidth = weight;\n    }\n\n    strokeColor(pal, which, layer) {\n        if (paletteTable[pal]) {\n            ctx[layer].strokeStyle = paletteTable[pal][which];\n        }  \n        else ctx[layer].strokeStyle = paletteTable[0][which];\n    }\n\n    fillColor(pal, which, layer) {\n        if (paletteTable[pal]) {\n            ctx[layer].fillStyle = paletteTable[pal][which];\n        }  \n        else ctx[layer].fillStyle = paletteTable[0][which];\n    }\n\n    fillEllipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\n        ctx[layer].fill();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillTriangle(x1, y1, x2, y2, x3, y3, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillRect(x, y, dimX, dimY, stroke, layer) {\n        ctx[layer].fillRect(x, y, dimX, dimY);\n        if (stroke) ctx[layer].strokeRect(x, y, dimX, dimY);\n    }\n\n    fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].lineTo(x4, y4);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n}\n"],"file":"InterferenceRenderer.js"}