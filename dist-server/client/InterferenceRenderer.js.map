{"version":3,"sources":["../../src/client/InterferenceRenderer.js"],"names":["paletteTable","bg","c1","c2","c3","c4","animLengths","eggSpawn","eggBreak","eggNote","transportSyncCount","game","client","canvas","ctx","w","h","leftViewBound","rightViewBound","time","players","playerId","thisPlayer","eggs","prevNotestack","prevRhythmstack","InterferenceRenderer","gameEngine","clientEngine","document","createElement","getContext","lineWidth","width","window","innerWidth","height","innerHeight","body","insertBefore","getElementById","addEventListener","setRendererSize","t","dt","room","syncClient","getSyncTime","world","queryObject","performanceView","number","playerWidth","queryObjects","instanceType","Performer","length","Egg","palette","transport","state","transportSyncInterval","seconds","clearRect","save","drawPlayers","drawSequences","drawEggs","drawImage","restore","n","p","i","x","fillColor","fillRect","fillStyle","fillTriangle","sequences","perc","step","drawStep","bass","melody","leftBound","eggRadius","rightBound","e","position","scale","mapToRange","animFrames","spawn","strokeStyle","pos","gamePositionToCanvasPosition","y","dimX","gameXDimToCanvasXDim","dimY","gameYDimToCanvasYDim","hp","sound","fillEllipse","Math","PI","fillQuad","drawBrokenEgg","pitch","animFrame","pal","gridWidth","paletteAttributes","gridHeight","playerCellToCanvasPosition","cell","playerHeight","c","layer","currentStep","dur","gameX","gameY","canvasX","floor","canvasY","cellX","cellY","cellsXPerPlayer","cellsYPerPlayer","val","l1","h1","l2","h2","radiusX","radiusY","stroke","gapX","break","gapY","which","rotation","startAngle","endAngle","beginPath","ellipse","fill","x1","y1","x2","y2","x3","y3","moveTo","lineTo","closePath","strokeRect","x4","y4","Renderer"],"mappings":"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","sourcesContent":["import { Renderer, TwoVector } from 'lance-gg';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Frequency } from 'tone';\n\nconst paletteTable = [\n    //'default': \n    {\n        bg: 'black',\n        c1: 'white',\n        c2: 'white',\n        c3: 'white',\n        c4: 'white'\n    },\n    //'rain': \n    {   \n        bg: '#3e2f5b', \n        c1: '#d7dedc',\n        c2: '#706563',\n        c3: '#457eac',\n        c4: '#748386' \n    },\n    //'celeste': \n    {   \n        bg: '#a5d8ff', \n        c1: '#ff8266',\n        c2: '#4381af',\n        c3: '#ac86b0',\n        c4: '#4b719c' \n    },\n    //'pyre': \n    {   \n        bg: '#a32323', \n        c1: '#2375a8',\n        c2: '#fbf6f7',\n        c3: '#f0ae62',\n        c4: '#011936' \n    },\n    //'journey': \n    {   \n        bg: '#fad68a', \n        c1: '#7f2819',\n        c2: '#a25a11',\n        c3: '#d5a962',\n        c4: '#fef8e8' \n    },\n    //'kirby': \n    {   \n        bg: '#a8c256', \n        c1: '#f4a4a7',\n        c2: '#e84c41',\n        c3: '#f9df6a',\n        c4: '#fa8334' \n    }\n]\n\nconst animLengths = {\n    eggSpawn: 20,\n    eggBreak: 30,\n    eggNote: 10\n}\n\nlet transportSyncCount = 0;\nlet game = null;\nlet client = null;\nlet canvas = []\nlet ctx = [];\nlet w = 0;\nlet h = 0;\nlet leftViewBound = 0; // bounds of area to be rendered in game coordinates\nlet rightViewBound = 0;\nlet time = 0;\nlet players = []; \nlet playerId = 0;\nlet thisPlayer = null;\nlet eggs = [];\n\nlet prevNotestack = '';\nlet prevRhythmstack = '';\n\nlet bg = paletteTable[0].bg;\nlet c1 = paletteTable[0].c1;\nlet c2 = paletteTable[0].c2;\nlet c3 = paletteTable[0].c3;\nlet c4 = paletteTable[0].c4;\n\nexport default class InterferenceRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n\n        game = this.gameEngine;\n        client = this.clientEngine;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n\n        canvas[0] = document.createElement('canvas');\n        ctx[0] = canvas[0].getContext('2d');\n        ctx[0].lineWidth = 1;\n\n        canvas[1] = document.createElement('canvas');\n        ctx[1] = canvas[1].getContext('2d');\n        ctx[1].lineWidth = 1;\n\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n\n        document.body.insertBefore(this.canvas, document.getElementById('logo'));\n\n        window.addEventListener('resize', ()=>{ this.setRendererSize(); });\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        if (client.room == null) return\n\n        time = client.syncClient.getSyncTime();\n        playerId = game.playerId;\n        thisPlayer = game.world.queryObject({ playerId });\n        if (client.performanceView) {\n            players = [thisPlayer];\n            leftViewBound = thisPlayer.number * game.playerWidth;\n            rightViewBound = (thisPlayer.number + 1) * game.playerWidth;\n        }\n        else {\n            players = game.world.queryObjects({ instanceType: Performer });\n            leftViewBound = 0;\n            rightViewBound = players.length * game.playerWidth;\n        }\n\n        eggs = game.world.queryObjects({ instanceType: Egg });\n\n        bg = paletteTable[thisPlayer.palette].bg;\n        c1 = paletteTable[thisPlayer.palette].c1;\n        c2 = paletteTable[thisPlayer.palette].c2;\n        c3 = paletteTable[thisPlayer.palette].c3;\n        c4 = paletteTable[thisPlayer.palette].c4;\n\n        if (client.transport.state === 'started') {\n            if (transportSyncCount >= game.transportSyncInterval) {\n                client.transport.seconds = time;\n                transportSyncCount = 0;\n                //console.log(client.transport.state);\n            }\n            transportSyncCount++\n        }\n        \n        // Clear the canvas\n        this.ctx.clearRect(0, 0, w, h);\n        ctx[0].clearRect(0, 0, w, h);\n        ctx[1].clearRect(0, 0, w, h);\n\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx[0].save();\n        ctx[1].save();\n        //ctx.scale(this.clientEngine.zoom, this.clientEngine.zoom);  // Zoom in and flip y axis\n        // Draw all things\n        this.drawPlayers();\n        this.drawSequences();\n        this.drawEggs();\n\n        /*()\n        ctx[1].fillStyle = c1;\n        ctx[1].font = \"20px Lucida Console\";\n        ctx[1].fillText(playerId, 50, 25);\n        ctx[1].fillText(time, 50, 50);\n        ctx[1].fillText(client.transport.position, 50, 75);\n        */\n        this.ctx.drawImage(canvas[0], 0, 0);\n        this.ctx.drawImage(canvas[1], 0, 0);\n\n        ctx[0].restore(); \n        ctx[1].restore();\n    }\n\n    drawPlayers() {\n        let n = players.length;\n        for (let p of players) {\n            let i = p.number - (leftViewBound / game.playerWidth);\n            let x = ((w / n) * i);\n            this.fillColor(p, 'bg', 0);\n            this.fillRect(x, 0, w / n, h / n, false, 0)\n        }\n        let i = thisPlayer.number;\n        let x = (w / n) * (i + 0.5);\n        ctx[0].fillStyle = 'white';\n        this.fillTriangle(  x,                      (1.05 * h) / n, \n                            x - ((0.25 * w) / n),   (1.15 * h) / n,\n                            x + ((0.25 * w) / n),   (1.15 * h) / n, false, 0 );   \n    }\n\n    drawSequences() {\n        for (let p of players) {\n            if (p.sequences != null) {\n                for (let step of p.sequences.perc) if (step != null) this.drawStep(p, step, 'perc');\n                for (let step of p.sequences.bass) if (step != null) this.drawStep(p, step, 'bass');\n                for (let step of p.sequences.melody) if (step != null) this.drawStep(p, step, 'melody');                      \n            }\n        }\n    }\n\n    drawEggs() {\n        let leftBound = leftViewBound - game.eggRadius;\n        let rightBound = rightViewBound + game.eggRadius;\n        for (let e of eggs) {\n            if (leftBound < e.position.x && e.position.x < rightBound) {\n                let scale = this.mapToRange(e.animFrames.spawn, 0, animLengths.eggSpawn, 0.0, 1.0);\n                ctx[1].fillStyle = 'white';\n                ctx[1].strokeStyle = 'black';\n                //let gamePos = game.quantizedPosition(e.position.x, e.position.y, 32, 18);\n                //let pos = this.gamePositionToCanvasPosition(gamePos[0], gamePos[1]);\n                let pos = this.gamePositionToCanvasPosition(e.position.x, e.position.y);\n                let x = pos[0];\n                let y = pos[1];\n                let dimX = this.gameXDimToCanvasXDim(game.eggRadius) * scale;\n                let dimY = this.gameYDimToCanvasYDim(game.eggRadius) * scale;\n                if (e.hp > 0) {\n                    if (e.sound === 'melody') {\n                        this.fillEllipse(x, y, dimX, dimY, 0, 0, 2*Math.PI, true, 1);\n                    }\n                    else if (e.sound === 'bass') {\n                        this.fillRect(x - dimX, y - dimY, dimX * 2, dimY * 2, true, 1);\n                    }\n                    else if (e.sound === 'perc') {\n                        this.fillQuad(  x - dimX, y, x, y - dimY, \n                                        x + dimX, y, x, y + dimY, true, 1);\n                    }\n                }\n                else this.drawBrokenEgg(e, x, y, dimX, dimY, true, 1);\n            }\n            if (e.animFrames.spawn < animLengths.eggSpawn) e.animFrames.spawn++;\n        }\n    }\n\n    drawStep(p, step, sound) {\n        for (let n of step) {\n            if (p.animFrames[sound][step] == null) p.animFrames[sound][step] = [];\n            if (p.animFrames[sound][step][n.pitch] == null) p.animFrames[sound][step][n.pitch] = 0;\n            let animFrame = p.animFrames[sound][step][n.pitch];\n            //console.log(p.animFrames[sound][step][n.pitch]);\n\n            let pal = p.palette;\n            let gridWidth = game.paletteAttributes[pal].gridWidth;\n            let gridHeight = game.paletteAttributes[pal].gridHeight;\n            let pos = this.playerCellToCanvasPosition(p, n.cell.x, n.cell.y, game.paletteAttributes[pal].gridWidth, gridHeight);\n            let dimX = this.gameXDimToCanvasXDim(game.playerWidth / gridWidth); \n            let dimY = this.gameYDimToCanvasYDim(game.playerHeight / gridHeight);\n            let x = pos[0];\n            let y = pos[1];\n            let c = 'c4';\n            let layer = 1;\n            if (sound === 'melody') {\n                x += dimX * 0.5;\n                y += dimY * 0.5;\n                dimX *= this.mapToRange(animFrame, 0, animLengths.eggNote, gridWidth, 1);\n                dimY *= this.mapToRange(animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                if (n.step !== client.currentStep) {\n                    if (n.dur === '2n') { c = 'c2'; layer = 0; }\n                    else c = 'c1';\n                }\n                this.fillColor(p, c, layer);\n                this.fillEllipse(x, y, dimX / 2, dimY / 2, 0, 0, 2*Math.PI, false, layer);\n            }\n            else if (sound === 'bass') {\n                y = this.mapToRange(animFrame, 0, animLengths.eggNote, 0, y);\n                dimY *= this.mapToRange(animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                if (n.step !== client.currentStep) {\n                    if (n.dur === '2n') { c = 'c3'; dimX *= (gridWidth / 2); layer = 0; }\n                    else c = 'c2';\n                }   \n                this.fillColor(p, c, layer);\n                this.fillRect(x, y, dimX, dimY, false, layer);\n            }\n            else if (sound === 'perc') {\n                if (n.step !== client.currentStep) {\n                    if (n.dur === '2n') { c = 'c1'; layer = 0; }\n                    else c = 'c3';\n                }   \n                this.fillColor(p, c, layer);\n                this.fillRect(x, y, dimX, dimY, false, layer);\n            }\n\n            if (p.animFrames[sound][step][n.pitch] < animLengths.eggNote) p.animFrames[sound][step][n.pitch]++;\n        }\n    }\n\n    setRendererSize() {\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n    }\n\n    gamePositionToCanvasPosition(gameX, gameY) {\n        let canvasX = Math.floor(this.mapToRange(gameX, leftViewBound, rightViewBound, 0, w));\n        let canvasY = Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / players.length)); \n        return [canvasX, canvasY];\n    }\n\n    gameXDimToCanvasXDim(gameX) {\n        return Math.floor(this.mapToRange(gameX, 0, game.playerWidth, 0, w / players.length));\n    }\n\n    gameYDimToCanvasYDim(gameY) {\n        return Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / players.length));\n    }\n\n    playerCellToCanvasPosition(p, cellX, cellY, cellsXPerPlayer, cellsYPerPlayer) {\n        //let gameX = game.cellWidth * (cellX + (p.number * game.playerCellWidth));\n        //let gameY = game.cellHeight * cellY;\n        let gameX = (game.playerWidth / cellsXPerPlayer) * (cellX + (p.number * cellsXPerPlayer));\n        let gameY = (game.playerHeight / cellsYPerPlayer) * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    mapToRange(val, l1, h1, l2, h2) {\n        return (l2 + (h2 - l2) * (val - l1) / (h1 - l1));\n    }\n\n    drawBrokenEgg(e, x, y, radiusX, radiusY, stroke, layer) {\n        let gapX = radiusX * (e.animFrames.break / animLengths.eggBreak);\n        let gapY = radiusY * (e.animFrames.break / animLengths.eggBreak);\n        this.fillEllipse(x+gapX, y-gapY, radiusX, radiusY, 0, 0, 0.5*Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y-gapY, radiusX, radiusY, 0, 0.5*Math.PI, Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y+gapY, radiusX, radiusY, 0, Math.PI, 1.5*Math.PI, stroke, layer)\n        this.fillEllipse(x+gapX, y+gapY, radiusX, radiusY, 0, 1.5*Math.PI, 2*Math.PI, stroke, layer)\n        if (e.animFrames.break < animLengths.eggBreak) e.animFrames.break++\n    }\n\n    fillColor(p, which, layer) {\n        if (paletteTable[p.palette]) {\n            ctx[layer].fillStyle = paletteTable[p.palette][which];\n        }  \n        else ctx[layer].fillStyle = paletteTable[0][which];\n    }\n\n    fillEllipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\n        ctx[layer].fill();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillTriangle(x1, y1, x2, y2, x3, y3, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillRect(x, y, dimX, dimY, stroke, layer) {\n        ctx[layer].fillRect(x, y, dimX, dimY);\n        if (stroke) ctx[layer].strokeRect(x, y, dimX, dimY);\n    }\n\n    fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].lineTo(x4, y4);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n}\n"],"file":"InterferenceRenderer.js"}