{"version":3,"sources":["../../src/client/InterferenceRenderer.js"],"names":["paletteTable","bg","c1","c2","c3","c4","animLengths","eggSpawn","eggBreak","eggNote","transportSyncCount","game","client","canvas","ctx","w","h","leftViewBound","rightViewBound","time","players","playerId","thisPlayer","sequences","eggs","prevNotestack","prevRhythmstack","InterferenceRenderer","gameEngine","clientEngine","document","createElement","getContext","width","window","innerWidth","height","innerHeight","body","insertBefore","getElementById","addEventListener","setRendererSize","t","dt","room","syncClient","getSyncTime","world","queryObject","performanceView","number","playerWidth","queryObjects","instanceType","Performer","length","Egg","palette","transport","state","transportSyncInterval","seconds","clearRect","save","drawPlayers","drawSequences","drawEggs","fillStyle","strokeStyle","strokeWeight","font","Number","toFixed","fillText","strokeText","drawImage","restore","n","p","i","x","fillColor","fillRect","a","ammo","x1","y1","fillTriangle","Object","keys","ownerId","bass","step","drawStep","player","melody","perc","leftBound","eggRadius","rightBound","e","position","scale","mapToRange","animFrames","spawn","strokeColor","pos","gamePositionToCanvasPosition","y","dimX","gameXDimToCanvasXDim","dimY","gameYDimToCanvasYDim","hp","sound","fillEllipse","Math","PI","fillQuad","drawBrokenEgg","gridWidth","paletteAttributes","gridHeight","playerCellToCanvasPosition","xCell","yCell","playerHeight","c","layer","animFrame","dur","melodyStep","bassStep","x2","y2","x3","y3","x4","y4","percStep","gameX","gameY","canvasX","floor","canvasY","cellX","cellY","cellsXPerPlayer","cellsYPerPlayer","val","l1","h1","l2","h2","radiusX","radiusY","stroke","gapX","break","gapY","weight","lineWidth","pal","which","rotation","startAngle","endAngle","beginPath","ellipse","fill","moveTo","lineTo","closePath","strokeRect","Renderer"],"mappings":"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","sourcesContent":["import { Renderer, TwoVector } from 'lance-gg';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Frequency } from 'tone';\n\nconst paletteTable = [\n    //'default': \n    {\n        bg: 'black',\n        c1: 'white',\n        c2: 'white',\n        c3: 'white',\n        c4: 'white'\n    },\n    //'rain': \n    {   \n        bg: '#3e2f5b', \n        c1: '#d7dedc',\n        c2: '#706563',\n        c3: '#457eac',\n        c4: '#748386' \n    },\n    //'celeste': \n    {   \n        bg: '#a5d8ff', \n        c1: '#ff8266',\n        c2: '#4381af',\n        c3: '#ac86b0',\n        c4: '#4b719c' \n    },\n    //'pyre': \n    {   \n        bg: '#a32323', \n        c1: '#2375a8',\n        c2: '#fbf6f7',\n        c3: '#f0ae62',\n        c4: '#011936' \n    },\n    //'journey': \n    {   \n        bg: '#fad68a', \n        c1: '#7f2819',\n        c2: '#a25a11',\n        c3: '#d5a962',\n        c4: '#fef8e8' \n    },\n    //'kirby': \n    {   \n        bg: '#a8c256', \n        c1: '#f4a4a7',\n        c2: '#e84c41',\n        c3: '#f9df6a',\n        c4: '#fa8334' \n    }\n]\n\nconst animLengths = {\n    eggSpawn: 20,\n    eggBreak: 30,\n    eggNote: 10\n}\n\nlet transportSyncCount = 0;\nlet game = null;\nlet client = null;\nlet canvas = []\nlet ctx = [];\nlet w = 0;\nlet h = 0;\nlet leftViewBound = 0; // bounds of area to be rendered in game coordinates\nlet rightViewBound = 0;\nlet time = 0;\nlet players = []; \nlet playerId = 0;\nlet thisPlayer = null;\nlet sequences = null;\nlet eggs = [];\n\nlet prevNotestack = '';\nlet prevRhythmstack = '';\n\nlet bg = paletteTable[0].bg;\nlet c1 = paletteTable[0].c1;\nlet c2 = paletteTable[0].c2;\nlet c3 = paletteTable[0].c3;\nlet c4 = paletteTable[0].c4;\n\nexport default class InterferenceRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n\n        game = this.gameEngine;\n        client = this.clientEngine;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n\n        canvas[0] = document.createElement('canvas');\n        ctx[0] = canvas[0].getContext('2d');\n\n\n        canvas[1] = document.createElement('canvas');\n        ctx[1] = canvas[1].getContext('2d');\n\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n\n        document.body.insertBefore(this.canvas, document.getElementById('logo'));\n\n        window.addEventListener('resize', ()=>{ this.setRendererSize(); });\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        if (client.room == null) return\n\n        time = client.syncClient.getSyncTime();\n        playerId = game.playerId;\n        thisPlayer = game.world.queryObject({ playerId });\n        if (client.performanceView) {\n            players = [thisPlayer];\n            leftViewBound = thisPlayer.number * game.playerWidth;\n            rightViewBound = (thisPlayer.number + 1) * game.playerWidth;\n        }\n        else {\n            players = game.world.queryObjects({ instanceType: Performer });\n            leftViewBound = 0;\n            rightViewBound = players.length * game.playerWidth;\n        }\n        sequences = client.sequences;\n        eggs = game.world.queryObjects({ instanceType: Egg });\n\n        bg = paletteTable[thisPlayer.palette].bg;\n        c1 = paletteTable[thisPlayer.palette].c1;\n        c2 = paletteTable[thisPlayer.palette].c2;\n        c3 = paletteTable[thisPlayer.palette].c3;\n        c4 = paletteTable[thisPlayer.palette].c4;\n\n        if (client.transport.state === 'started') {\n            if (transportSyncCount >= game.transportSyncInterval) {\n                client.transport.seconds = time;\n                transportSyncCount = 0;\n                //console.log(client.transport.state);\n            }\n            transportSyncCount++\n        }\n        \n        // Clear the canvas\n        this.ctx.clearRect(0, 0, w, h);\n        ctx[0].clearRect(0, 0, w, h);\n        ctx[1].clearRect(0, 0, w, h);\n\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx[0].save();\n        ctx[1].save();\n        //ctx.scale(this.clientEngine.zoom, this.clientEngine.zoom);  // Zoom in and flip y axis\n        // Draw all things\n        this.drawPlayers();\n        this.drawSequences();\n        this.drawEggs();\n\n        if (!client.performanceView) {\n            ctx[1].fillStyle = 'white';\n            ctx[1].strokeStyle = 'black';\n            this.strokeWeight(1, 1);\n            ctx[1].font = \"20px Lucida Console\";\n            //ctx[1].fillText(playerId, 50, 25);\n            time = Number(time).toFixed(3);\n            ctx[1].fillText(time, w * 0.05, h * 0.95);\n            ctx[1].strokeText(time, w * 0.05, h * 0.95);\n            //ctx[1].fillText(client.transport.position, 50, 75);\n        }\n\n        this.ctx.drawImage(canvas[0], 0, 0);\n        this.ctx.drawImage(canvas[1], 0, 0);\n\n        ctx[0].restore(); \n        ctx[1].restore();\n    }\n\n    drawPlayers() {\n        let n = players.length;\n        for (let p of players) {\n            let i = p.number - (leftViewBound / game.playerWidth);\n            let x = ((w / n) * i);\n            this.fillColor(p.palette, 'bg', 0);\n            this.fillRect(x, 0, w / n, h / n, false, 0)\n            this.fillColor('default', 'bg', 1);\n            for (let a = 0; a < p.ammo; a++) {\n                let x1 = x + ((a + 1) * ((w / n) / (p.ammo + 1)));\n                let y1 = (h / n) * 0.92;\n                this.fillTriangle(  x1, y1, \n                                    x1 - ((0.02 * w) / n), y1 + ((0.04 * h) / n),\n                                    x1 + ((0.02 * w) / n), y1 + ((0.04 * h) / n), false, 1);\n            }\n        }\n        let i = thisPlayer.number;\n        let x = (w / n) * (i + 0.5);\n        ctx[0].fillStyle = 'white';\n        this.fillTriangle(  x,                      (1.05 * h) / n, \n                            x - ((0.25 * w) / n),   (1.15 * h) / n,\n                            x + ((0.25 * w) / n),   (1.15 * h) / n, false, 0 );   \n    }\n\n    drawSequences() {\n        this.strokeWeight(2, 0);\n        this.strokeWeight(2, 1);\n        for (let ownerId of Object.keys(sequences)) {\n            if (sequences[ownerId].bass != null) for (let step of sequences[ownerId].bass) if (step != null) this.drawStep(sequences[ownerId].player, step, 'bass');\n            if (sequences[ownerId].melody != null) for (let step of sequences[ownerId].melody) if (step != null) this.drawStep(sequences[ownerId].player, step, 'melody'); \n            if (sequences[ownerId].perc != null) for (let step of sequences[ownerId].perc) if (step != null) this.drawStep(sequences[ownerId].player, step, 'perc');                     \n        }\n    }\n\n    drawEggs() {\n        let leftBound = leftViewBound - game.eggRadius;\n        let rightBound = rightViewBound + game.eggRadius;\n        for (let e of eggs) {\n            if (leftBound < e.position.x && e.position.x < rightBound) {\n                let scale = this.mapToRange(e.animFrames.spawn, 0, animLengths.eggSpawn, 0.0, 1.0);\n                this.fillColor(0, 'c1', 1);\n                this.strokeColor(0, 'bg', 1);\n                //let gamePos = game.quantizedPosition(e.position.x, e.position.y, 32, 18);\n                //let pos = this.gamePositionToCanvasPosition(gamePos[0], gamePos[1]);\n                let pos = this.gamePositionToCanvasPosition(e.position.x, e.position.y);\n                let x = pos[0];\n                let y = pos[1];\n                let dimX = this.gameXDimToCanvasXDim(game.eggRadius) * scale;\n                let dimY = this.gameYDimToCanvasYDim(game.eggRadius) * scale;\n                this.strokeWeight((dimX + dimY) * 0.125, 1);\n                if (e.hp > 0) {\n                    if (e.sound === 'melody') {\n                        this.fillEllipse(x, y, dimX, dimY, 0, 0, 2*Math.PI, true, 1);\n                    }\n                    else if (e.sound === 'bass') {\n                        this.fillRect(x - dimX, y - dimY, dimX * 2, dimY * 2, true, 1);\n                    }\n                    else if (e.sound === 'perc') {\n                        this.fillQuad(  x - dimX, y, x, y - dimY, \n                                        x + dimX, y, x, y + dimY, true, 1);\n                    }\n                }\n                else this.drawBrokenEgg(e, x, y, dimX, dimY, true, 1);\n            }\n            if (e.animFrames.spawn < animLengths.eggSpawn) e.animFrames.spawn++;\n        }\n    }\n\n    drawStep(p, step, sound) {\n        if (p == null) return;\n        for (let n of step) {\n            //console.log(p.animFrames[sound][step][n.pitch]);\n            let gridWidth = game.paletteAttributes[n.palette].gridWidth;\n            let gridHeight = game.paletteAttributes[n.palette].gridHeight;\n            let pos = this.playerCellToCanvasPosition(p, n.xCell, n.yCell, gridWidth, gridHeight);\n            let dimX = this.gameXDimToCanvasXDim(game.playerWidth / gridWidth); \n            let dimY = this.gameYDimToCanvasYDim(game.playerHeight / gridHeight);\n            let x = pos[0];\n            let y = pos[1];\n            let c = 'bg';\n            let layer = 1;\n            if (sound === 'melody') {\n                x += dimX * 0.5;\n                y += dimY * 0.5;\n                //dimX *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridWidth, 1);\n                dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                c = 'c1';\n                if (n.dur === '2n') { \n                    c = 'c2'; \n                    dimX *= 2;\n                    dimY *= 2;\n                    layer = 0; \n                }\n                if (n.step === client.melodyStep) c = 'c4';\n                this.fillColor(n.palette, c, layer);\n                this.strokeColor(n.palette, 'bg', layer);\n                this.fillEllipse(x, y, dimX / 2, dimY / 2, 0, 0, 2*Math.PI, true, layer);\n            }\n            else if (sound === 'bass') {\n                y = this.mapToRange(n.animFrame, 0, animLengths.eggNote, 0, y);\n                dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                c = 'c2';\n                if (n.dur === '2n') { \n                    c = 'c3'; \n                    dimX *= (gridWidth / 2); \n                    layer = 0; \n                }\n                if (n.step === client.bassStep) c = 'c4';\n                this.fillColor(n.palette, c, layer);\n                this.strokeColor(n.palette, 'bg', layer);\n                this.fillRect(x, y, dimX, dimY, false, layer);\n            }\n            else if (sound === 'perc') {\n                x += dimX * 0.5;\n                y += dimY * 0.5;\n                dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight / 2, 1);\n                let x1 = x - (dimX * 0.5);\n                let y1 = y;\n                let x2 = x;\n                let y2 = y - (dimY * 0.5);\n                let x3 = x + (dimX * 0.5);\n                let y3 = y;\n                let x4 = x;\n                let y4 = y + (dimY * 0.5);\n                c = 'c3'\n                if (n.dur === '2n') { \n                    c = 'c1'; \n                    x2 += dimX;\n                    x4 -= dimX\n                    layer = 0;             \n                }\n                if (n.step === client.percStep) c = 'c4';\n                this.fillColor(n.palette, c, layer);\n                this.strokeColor(n.palette, 'bg', layer);\n                this.fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, true, layer);\n            }\n\n            if (n.animFrame < animLengths.eggNote) n.animFrame++;\n        }\n    }\n\n    setRendererSize() {\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n    }\n\n    gamePositionToCanvasPosition(gameX, gameY) {\n        let canvasX = Math.floor(this.mapToRange(gameX, leftViewBound, rightViewBound, 0, w));\n        let canvasY = Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / players.length)); \n        return [canvasX, canvasY];\n    }\n\n    gameXDimToCanvasXDim(gameX) {\n        return Math.floor(this.mapToRange(gameX, 0, game.playerWidth, 0, w / players.length));\n    }\n\n    gameYDimToCanvasYDim(gameY) {\n        return Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / players.length));\n    }\n\n    playerCellToCanvasPosition(p, cellX, cellY, cellsXPerPlayer, cellsYPerPlayer) {\n        //let gameX = game.cellWidth * (cellX + (p.number * game.playerCellWidth));\n        //let gameY = game.cellHeight * cellY;\n        let gameX = (game.playerWidth / cellsXPerPlayer) * (cellX + (p.number * cellsXPerPlayer));\n        let gameY = (game.playerHeight / cellsYPerPlayer) * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    mapToRange(val, l1, h1, l2, h2) {\n        return (l2 + (h2 - l2) * (val - l1) / (h1 - l1));\n    }\n\n    drawBrokenEgg(e, x, y, radiusX, radiusY, stroke, layer) {\n        let gapX = radiusX * (e.animFrames.break / animLengths.eggBreak);\n        let gapY = radiusY * (e.animFrames.break / animLengths.eggBreak);\n        this.fillEllipse(x+gapX, y-gapY, radiusX, radiusY, 0, 0, 0.5*Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y-gapY, radiusX, radiusY, 0, 0.5*Math.PI, Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y+gapY, radiusX, radiusY, 0, Math.PI, 1.5*Math.PI, stroke, layer)\n        this.fillEllipse(x+gapX, y+gapY, radiusX, radiusY, 0, 1.5*Math.PI, 2*Math.PI, stroke, layer)\n        if (e.animFrames.break < animLengths.eggBreak) e.animFrames.break++\n    }\n    \n    strokeWeight(weight, layer) {\n        ctx[layer].lineWidth = weight;\n    }\n\n    strokeColor(pal, which, layer) {\n        if (paletteTable[pal]) {\n            ctx[layer].strokeStyle = paletteTable[pal][which];\n        }  \n        else ctx[layer].strokeStyle = paletteTable[0][which];\n    }\n\n    fillColor(pal, which, layer) {\n        if (paletteTable[pal]) {\n            ctx[layer].fillStyle = paletteTable[pal][which];\n        }  \n        else ctx[layer].fillStyle = paletteTable[0][which];\n    }\n\n    fillEllipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\n        ctx[layer].fill();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillTriangle(x1, y1, x2, y2, x3, y3, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillRect(x, y, dimX, dimY, stroke, layer) {\n        ctx[layer].fillRect(x, y, dimX, dimY);\n        if (stroke) ctx[layer].strokeRect(x, y, dimX, dimY);\n    }\n\n    fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].lineTo(x4, y4);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n}\n"],"file":"InterferenceRenderer.js"}