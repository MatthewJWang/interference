{"version":3,"sources":["../../src/client/InterferenceRenderer.js"],"names":["paletteTable","bg","c1","c2","c3","c4","animLengths","eggSpawn","eggBreak","eggNote","transportSyncCount","game","client","canvas","ctx","w","h","leftViewBound","rightViewBound","time","players","playerId","thisPlayer","graphicNotes","eggs","prevNotestack","prevRhythmstack","InterferenceRenderer","gameEngine","clientEngine","document","createElement","getContext","lineWidth","width","window","innerWidth","height","innerHeight","body","insertBefore","getElementById","addEventListener","setRendererSize","t","dt","room","syncClient","getSyncTime","world","queryObject","performanceView","number","playerWidth","queryObjects","instanceType","Performer","length","Egg","palette","transport","state","transportSyncInterval","seconds","clearRect","save","drawPlayers","drawNoteGraphics","drawEggs","drawImage","restore","n","p","i","x","fillColor","fillRect","fillStyle","fillTriangle","g","type","pos","playerCellToCanvasPosition","cell","y","mapToRange","animFrame","heightFactor","playerCellHeight","dimX","gameXDimToCanvasXDim","cellWidth","dimY","gameYDimToCanvasYDim","cellHeight","c","layer","duration","playerCellWidth","step","currentStep","leftBound","eggRadius","rightBound","e","position","scale","animFrames","spawn","strokeStyle","gamePositionToCanvasPosition","hp","ellipse","Math","PI","drawBrokenEgg","gameX","gameY","canvasX","floor","canvasY","playerHeight","cellX","cellY","val","l1","h1","l2","h2","radiusX","radiusY","gapX","break","gapY","which","rotation","startAngle","endAngle","beginPath","fill","stroke","x1","y1","x2","y2","x3","y3","moveTo","lineTo","closePath","Renderer"],"mappings":"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","sourcesContent":["import { Renderer, TwoVector } from 'lance-gg';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Frequency } from 'tone';\n\nconst paletteTable = {\n    'rain': {   \n        bg: '#3e2f5b', \n        c1: '#d7dedc',\n        c2: '#706563',\n        c3: '#457eac',\n        c4: '#748386' \n    },\n    'celeste': {   \n        bg: '#a5d8ff', \n        c1: '#ff8266',\n        c2: '#4381af',\n        c3: '#ac86b0',\n        c4: '#4b719c' \n    },\n    'pyre': {   \n        bg: '#a32323', \n        c1: '#2375a8',\n        c2: '#fbf6f7',\n        c3: '#f0ae62',\n        c4: '#011936' \n    },\n    'journey': {   \n        bg: '#fad68a', \n        c1: '#7f2819',\n        c2: '#a25a11',\n        c3: '#d5a962',\n        c4: '#fef8e8' \n    },\n    'kirby': {   \n        bg: '#a8c256', \n        c1: '#f4a4a7',\n        c2: '#e84c41',\n        c3: '#f9df6a',\n        c4: '#fa8334' \n    },\n    'default': {\n        bg: 'black',\n        c1: 'white',\n        c2: 'white',\n        c3: 'white',\n        c4: 'white'\n    }\n}\n\nconst animLengths = {\n    eggSpawn: 20,\n    eggBreak: 30,\n    eggNote: 10\n}\n\nlet transportSyncCount = 0;\nlet game = null;\nlet client = null;\nlet canvas = []\nlet ctx = [];\nlet w = 0;\nlet h = 0;\nlet leftViewBound = 0; // bounds of area to be rendered in game coordinates\nlet rightViewBound = 0;\nlet time = 0;\nlet players = []; \nlet playerId = 0;\nlet thisPlayer = null;\nlet graphicNotes = [];\nlet eggs = [];\n\nlet prevNotestack = '';\nlet prevRhythmstack = '';\n\nlet bg = paletteTable['default'].bg;\nlet c1 = paletteTable['default'].c1;\nlet c2 = paletteTable['default'].c2;\nlet c3 = paletteTable['default'].c3;\nlet c4 = paletteTable['default'].c4;\n\nexport default class InterferenceRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n\n        game = this.gameEngine;\n        client = this.clientEngine;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n\n        canvas[0] = document.createElement('canvas');\n        ctx[0] = canvas[0].getContext('2d');\n        ctx[0].lineWidth = 1;\n\n        canvas[1] = document.createElement('canvas');\n        ctx[1] = canvas[1].getContext('2d');\n        ctx[1].lineWidth = 1;\n\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n\n        document.body.insertBefore(this.canvas, document.getElementById('logo'));\n\n        window.addEventListener('resize', ()=>{ this.setRendererSize(); });\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        if (client.room === null) return\n\n        time = client.syncClient.getSyncTime();\n        playerId = game.playerId;\n        thisPlayer = game.world.queryObject({ playerId });\n        if (client.performanceView) {\n            players = [thisPlayer];\n            leftViewBound = thisPlayer.number * game.playerWidth;\n            rightViewBound = (thisPlayer.number + 1) * game.playerWidth;\n        }\n        else {\n            players = game.world.queryObjects({ instanceType: Performer });\n            leftViewBound = 0;\n            rightViewBound = players.length * game.playerWidth;\n        }\n\n        graphicNotes = client.graphicNotes;\n        eggs = game.world.queryObjects({ instanceType: Egg });\n\n        bg = paletteTable[thisPlayer.palette].bg;\n        c1 = paletteTable[thisPlayer.palette].c1;\n        c2 = paletteTable[thisPlayer.palette].c2;\n        c3 = paletteTable[thisPlayer.palette].c3;\n        c4 = paletteTable[thisPlayer.palette].c4;\n\n        if (client.transport.state === 'started') {\n            if (transportSyncCount >= game.transportSyncInterval) {\n                client.transport.seconds = time;\n                transportSyncCount = 0;\n                //console.log(client.transport.state);\n            }\n            transportSyncCount++\n        }\n        \n        // Clear the canvas\n        this.ctx.clearRect(0, 0, w, h);\n        ctx[0].clearRect(0, 0, w, h);\n        ctx[1].clearRect(0, 0, w, h);\n\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx[0].save();\n        ctx[1].save();\n        //ctx.scale(this.clientEngine.zoom, this.clientEngine.zoom);  // Zoom in and flip y axis\n        // Draw all things\n        this.drawPlayers();\n        this.drawNoteGraphics();\n        this.drawEggs();\n\n        /*()\n        ctx[1].fillStyle = c1;\n        ctx[1].font = \"20px Lucida Console\";\n        ctx[1].fillText(playerId, 50, 25);\n        ctx[1].fillText(time, 50, 50);\n        ctx[1].fillText(client.transport.position, 50, 75);\n        */\n        this.ctx.drawImage(canvas[0], 0, 0);\n        this.ctx.drawImage(canvas[1], 0, 0);\n\n        ctx[0].restore(); \n        ctx[1].restore();\n    }\n\n    drawPlayers() {\n        let n = players.length;\n        for (let p of players) {\n            let i = p.number - (leftViewBound / game.playerWidth);\n            let x = ((w / n) * i);\n            this.fillColor(p, 'bg', 0);\n            ctx[0].fillRect(x, 0, w / n, h / n)\n        }\n        let i = thisPlayer.number;\n        let x = (w / n) * (i + 0.5);\n        ctx[0].fillStyle = 'white';\n        this.fillTriangle(  x,                      (1.05 * h) / n, \n                            x - ((0.25 * w) / n),   (1.15 * h) / n,\n                            x + ((0.25 * w) / n),   (1.15 * h) / n, 0 );   \n    }\n\n    drawNoteGraphics() {\n        for (let g of graphicNotes) {\n            if (g.type === 'egg') {\n                let pos = this.playerCellToCanvasPosition(thisPlayer, g.cell.x, g.cell.y);\n                let x = pos[0];\n                let y = this.mapToRange(g.animFrame, 0, animLengths.eggNote, 0, pos[1]);\n                let heightFactor = this.mapToRange(g.animFrame, 0, animLengths.eggNote, game.playerCellHeight, 1);\n                let dimX = this.gameXDimToCanvasXDim(game.cellWidth); \n                let dimY = this.gameYDimToCanvasYDim(game.cellHeight*heightFactor);\n                let c = 'c1';\n                let layer = 1;\n                if (g.duration === '2n') {\n                    c = 'c3';\n                    dimX *= game.playerCellWidth / 2;\n                    layer = 0;\n                }\n                if (g.step === client.currentStep) c = 'c2'\n                this.fillColor(thisPlayer, c, layer);\n                ctx[layer].fillRect(x, y, dimX, dimY);\n                if (g.animFrame < animLengths.eggNote) g.animFrame++;\n            }\n        }\n    }\n\n    drawEggs() {\n        let leftBound = leftViewBound - game.eggRadius;\n        let rightBound = rightViewBound + game.eggRadius;\n        for (let e of eggs) {\n            if (leftBound < e.position.x && e.position.x < rightBound) {\n                let scale = this.mapToRange(e.animFrames.spawn, 0, animLengths.eggSpawn, 0.0, 1.0);\n                ctx[1].fillStyle = 'white';\n                ctx[1].strokeStyle = 'black';\n                let pos = this.gamePositionToCanvasPosition(e.position.x, e.position.y)\n                if (e.hp > 0) {\n                    this.ellipse(pos[0], pos[1], \n                        this.gameXDimToCanvasXDim(game.eggRadius) * scale, \n                        this.gameYDimToCanvasYDim(game.eggRadius) * scale,\n                        0, 0, 2*Math.PI, 1);\n                }\n                else this.drawBrokenEgg(e, pos[0], pos[1], \n                    this.gameXDimToCanvasXDim(game.eggRadius), this.gameYDimToCanvasYDim(game.eggRadius), 1);\n            }\n        if (e.animFrames.spawn < animLengths.eggSpawn) e.animFrames.spawn++;\n        }\n    }\n\n    setRendererSize() {\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n    }\n\n    gamePositionToCanvasPosition(gameX, gameY) {\n        let canvasX = Math.floor(this.mapToRange(gameX, leftViewBound, rightViewBound, 0, w));\n        let canvasY = Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / players.length)); \n        return [canvasX, canvasY];\n    }\n\n    gameXDimToCanvasXDim(gameX) {\n        return Math.floor(this.mapToRange(gameX, 0, game.playerWidth, 0, w / players.length));\n    }\n\n    gameYDimToCanvasYDim(gameY) {\n        return Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / players.length));\n    }\n\n    playerCellToCanvasPosition(p, cellX, cellY) {\n        let gameX = game.cellWidth * (cellX + (p.number * game.playerCellWidth));\n        let gameY = game.cellHeight * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    mapToRange(val, l1, h1, l2, h2) {\n        return (l2 + (h2 - l2) * (val - l1) / (h1 - l1));\n    }\n\n    drawBrokenEgg(e, x, y, radiusX, radiusY, layer) {\n        let gapX = radiusX * (e.animFrames.break / animLengths.eggBreak);\n        let gapY = radiusY * (e.animFrames.break / animLengths.eggBreak);\n        this.ellipse(x+gapX, y-gapY, radiusX, radiusY, 0, 0, 0.5*Math.PI, layer)\n        this.ellipse(x-gapX, y-gapY, radiusX, radiusY, 0, 0.5*Math.PI, Math.PI, layer)\n        this.ellipse(x-gapX, y+gapY, radiusX, radiusY, 0, Math.PI, 1.5*Math.PI, layer)\n        this.ellipse(x+gapX, y+gapY, radiusX, radiusY, 0, 1.5*Math.PI, 2*Math.PI, layer)\n        if (e.animFrames.break < animLengths.eggBreak) e.animFrames.break++\n    }\n\n    fillColor(p, which, layer) {\n        if (paletteTable[p.palette]) {\n            ctx[layer].fillStyle = paletteTable[p.palette][which];\n        }  \n        else ctx[layer].fillStyle = paletteTable['default'][which];\n    }\n\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\n        ctx[layer].fill();\n        ctx[layer].stroke();\n    }\n\n    fillTriangle(x1, y1, x2, y2, x3, y3, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n    }\n\n}\n"],"file":"InterferenceRenderer.js"}