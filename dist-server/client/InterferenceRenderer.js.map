{"version":3,"sources":["../../src/client/InterferenceRenderer.js"],"names":["paletteTable","bg","c1","c2","c3","c4","animLengths","eggSpawn","eggBreak","eggNote","game","client","canvas","ctx","w","h","leftViewBound","rightViewBound","time","players","playerId","thisPlayer","sequences","eggs","InterferenceRenderer","gameEngine","clientEngine","document","createElement","getContext","width","window","innerWidth","height","innerHeight","body","insertBefore","getElementById","addEventListener","setRendererSize","t","dt","room","syncClient","getSyncTime","world","queryObject","queryObjects","instanceType","Performer","performanceView","xPos","playerWidth","length","Egg","palette","clearRect","save","drawPlayers","drawSequences","drawEggs","fillStyle","strokeStyle","strokeWeight","font","Number","toFixed","fillText","strokeText","number","drawImage","restore","n","p","i","xDim","gameXDimToCanvasXDim","paletteAttributes","gridWidth","yDim","gameYDimToCanvasYDim","playerHeight","gridHeight","xIdx","grid","x","yIdx","y","fillColor","fillRect","a","ammo","x1","y1","fillTriangle","Object","keys","ownerId","bass","step","drawStep","melody","perc","e","scale","mapToRange","animFrames","spawn","strokeColor","dimX","eggRadius","dimY","pos","gamePositionToCanvasPosition","position","hp","sound","fillEllipse","Math","PI","fillQuad","drawBrokenEgg","cellToCanvasPosition","yPos","c","layer","animFrame","dur","melodyStep","bassStep","x2","y2","x3","y3","x4","y4","percStep","gameX","gameY","div","canvasX","floor","canvasY","cellX","cellY","cellsXPerPlayer","cellsYPerPlayer","val","l1","h1","l2","h2","radiusX","radiusY","stroke","gapX","break","gapY","weight","lineWidth","pal","which","rotation","startAngle","endAngle","beginPath","ellipse","fill","moveTo","lineTo","closePath","strokeRect","Renderer"],"mappings":"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","sourcesContent":["import { Renderer, TwoVector } from 'lance-gg';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\n\nconst paletteTable = [\n    //'default': \n    {\n        bg: 'black',\n        c1: 'white',\n        c2: 'white',\n        c3: 'white',\n        c4: 'white'\n    },\n    //'rain': \n    {   \n        bg: '#3e2f5b', \n        c1: '#d7dedc',\n        c2: '#706563',\n        c3: '#457eac',\n        c4: '#748386' \n    },\n    //'celeste': \n    {   \n        bg: '#a5d8ff', \n        c1: '#ff8266',\n        c2: '#4381af',\n        c3: '#ac86b0',\n        c4: '#4b719c' \n    },\n    //'pyre': \n    {   \n        bg: '#a32323', \n        c1: '#2375a8',\n        c2: '#fbf6f7',\n        c3: '#f0ae62',\n        c4: '#011936' \n    },\n    //'journey': \n    {   \n        bg: '#fad68a', \n        c1: '#7f2819',\n        c2: '#a25a11',\n        c3: '#d5a962',\n        c4: '#fef8e8' \n    },\n    //'kirby': \n    {   \n        bg: '#a8c256', \n        c1: '#f4a4a7',\n        c2: '#e84c41',\n        c3: '#f9df6a',\n        c4: '#fa8334' \n    }\n]\n\nconst animLengths = {\n    eggSpawn: 20,\n    eggBreak: 30,\n    eggNote: 10\n}\n\nlet game = null;\nlet client = null;\nlet canvas = []\nlet ctx = [];\nlet w = 0;\nlet h = 0;\nlet leftViewBound = 0; // bounds of area to be rendered in game coordinates\nlet rightViewBound = 0;\nlet time = 0;\nlet players = []; \nlet playerId = 0;\nlet thisPlayer = null;\nlet sequences = null;\nlet eggs = [];\n\nlet bg = paletteTable[0].bg;\nlet c1 = paletteTable[0].c1;\nlet c2 = paletteTable[0].c2;\nlet c3 = paletteTable[0].c3;\nlet c4 = paletteTable[0].c4;\n\nexport default class InterferenceRenderer extends Renderer {\n\n    constructor(gameEngine, clientEngine) {\n        super(gameEngine, clientEngine);\n\n        game = this.gameEngine;\n        client = this.clientEngine;\n\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n\n        canvas[0] = document.createElement('canvas');\n        ctx[0] = canvas[0].getContext('2d');\n\n\n        canvas[1] = document.createElement('canvas');\n        ctx[1] = canvas[1].getContext('2d');\n\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n\n        document.body.insertBefore(this.canvas, document.getElementById('logo'));\n\n        window.addEventListener('resize', ()=>{ this.setRendererSize(); });\n    }\n\n    draw(t, dt) {\n        super.draw(t, dt);\n\n        if (client.room == null) return;\n\n        time = client.syncClient.getSyncTime();\n        playerId = game.playerId;\n        thisPlayer = game.world.queryObject({ playerId });\n        players = game.world.queryObjects({ instanceType: Performer });\n        if (client.performanceView) {\n            leftViewBound = thisPlayer.xPos;\n            rightViewBound = leftViewBound + game.playerWidth;\n        }\n        else {\n            leftViewBound = 0;\n            rightViewBound = players.length * game.playerWidth;\n        }\n        sequences = client.sequences;\n        eggs = game.world.queryObjects({ instanceType: Egg });\n\n        bg = paletteTable[thisPlayer.palette].bg;\n        c1 = paletteTable[thisPlayer.palette].c1;\n        c2 = paletteTable[thisPlayer.palette].c2;\n        c3 = paletteTable[thisPlayer.palette].c3;\n        c4 = paletteTable[thisPlayer.palette].c4;\n        \n        // Clear the canvas\n        this.ctx.clearRect(0, 0, w, h);\n        ctx[0].clearRect(0, 0, w, h);\n        ctx[1].clearRect(0, 0, w, h);\n\n        // Transform the canvas\n        // Note that we need to flip the y axis since Canvas pixel coordinates\n        // goes from top to bottom, while physics does the opposite.\n        ctx[0].save();\n        ctx[1].save();\n        //ctx.scale(this.clientEngine.zoom, this.clientEngine.zoom);  // Zoom in and flip y axis\n        // Draw all things\n        this.drawPlayers();\n        this.drawSequences();\n        this.drawEggs();\n\n        if (!client.performanceView) {\n            ctx[1].fillStyle = 'white';\n            ctx[1].strokeStyle = 'black';\n            this.strokeWeight(1, 1);\n            ctx[1].font = \"20px Lucida Console\";\n            //ctx[1].fillText(playerId, 50, 25);\n            time = Number(time).toFixed(3);\n            ctx[1].fillText(time, w * 0.05, h * 0.95);\n            ctx[1].strokeText(time, w * 0.05, h * 0.95);\n            ctx[1].fillText(thisPlayer.number, w * 0.05, h * 0.85);\n            ctx[1].strokeText(thisPlayer.number, w * 0.05, h * 0.85);\n            //ctx[1].fillText(client.transport.position, 50, 75);\n        }\n\n        this.ctx.drawImage(canvas[0], 0, 0);\n        this.ctx.drawImage(canvas[1], 0, 0);\n\n        ctx[0].restore(); \n        ctx[1].restore();\n    }\n\n    drawPlayers() {\n        let n = players.length;\n        if (client.performanceView) n = 1;\n        for (let p of players) {\n            let i = p.number - (leftViewBound / game.playerWidth);\n            let xDim = this.gameXDimToCanvasXDim(game.playerWidth / game.paletteAttributes[p.palette].gridWidth);\n            let yDim = this.gameYDimToCanvasYDim(game.playerHeight / game.paletteAttributes[p.palette].gridHeight);\n            for (let xIdx = 0; xIdx < p.grid.length; xIdx++) {\n                let x = ((w / n) * i) + (xIdx * xDim);\n                for (let yIdx = 0; yIdx < p.grid[xIdx].length; yIdx++) {\n                    let y = yIdx * yDim;\n                    this.fillColor(p.grid[xIdx][yIdx], 'bg', 0);\n                    this.fillRect(x, y, xDim, yDim, false, 0)\n                }\n            }\n            this.fillColor('default', 'bg', 1);\n            for (let a = 0; a < p.ammo; a++) {\n                let x = ((w / n) * i);\n                let x1 = x + ((a + 1) * ((w / n) / (p.ammo + 1)));\n                let y1 = (h / n) * 0.92;\n                this.fillTriangle(  x1, y1, \n                                    x1 - ((0.02 * w) / n), y1 + ((0.04 * h) / n),\n                                    x1 + ((0.02 * w) / n), y1 + ((0.04 * h) / n), false, 1);\n            }\n            if (p.number === 0) {\n                i = players.length - (leftViewBound / game.playerWidth);\n                for (let xIdx = 0; xIdx < p.grid.length; xIdx++) {\n                    let x = ((w / n) * i) + (xIdx * xDim);\n                    for (let yIdx = 0; yIdx < p.grid[xIdx].length; yIdx++) {\n                        let y = yIdx * yDim;\n                        this.fillColor(p.grid[xIdx][yIdx], 'bg', 0);\n                        this.fillRect(x, y, xDim, yDim, false, 0)\n                    }\n                }\n                this.fillColor('default', 'bg', 1);\n                for (let a = 0; a < p.ammo; a++) {\n                    let x = ((w / n) * i);\n                    let x1 = x + ((a + 1) * ((w / n) / (p.ammo + 1)));\n                    let y1 = (h / n) * 0.92;\n                    this.fillTriangle(  x1, y1, \n                                        x1 - ((0.02 * w) / n), y1 + ((0.04 * h) / n),\n                                        x1 + ((0.02 * w) / n), y1 + ((0.04 * h) / n), false, 1);\n                }\n            }\n        }\n        let x = (w / n) * (thisPlayer.number + 0.5);\n        ctx[0].fillStyle = 'white';\n        this.fillTriangle(  x,                      (1.05 * h) / n, \n                            x - ((0.25 * w) / n),   (1.15 * h) / n,\n                            x + ((0.25 * w) / n),   (1.15 * h) / n, false, 0 );   \n    }\n\n    drawSequences() {\n        this.strokeWeight(2, 0);\n        this.strokeWeight(2, 1);\n        for (let ownerId of Object.keys(sequences)) {\n            if (sequences[ownerId].bass != null) for (let step of sequences[ownerId].bass) if (step != null) this.drawStep(step, 'bass');\n            if (sequences[ownerId].melody != null) for (let step of sequences[ownerId].melody) if (step != null) this.drawStep(step, 'melody'); \n            if (sequences[ownerId].perc != null) for (let step of sequences[ownerId].perc) if (step != null) this.drawStep(step, 'perc');                     \n        }\n    }\n\n    drawEggs() {\n        for (let e of eggs) {\n            let scale = this.mapToRange(e.animFrames.spawn, 0, animLengths.eggSpawn, 0.0, 1.0);\n            this.fillColor(0, 'c1', 1);\n            this.strokeColor(0, 'bg', 1);\n            let dimX = this.gameXDimToCanvasXDim(game.eggRadius) * scale;\n            let dimY = this.gameYDimToCanvasYDim(game.eggRadius) * scale;\n            let pos = this.gamePositionToCanvasPosition(e.position.x, e.position.y);\n            let x = pos[0];\n            let y = pos[1];\n            this.strokeWeight((dimX + dimY) * 0.0625, 1);\n            if (e.hp > 0) {\n                if (e.sound === 'melody') {\n                    this.fillEllipse(x, y, dimX, dimY, 0, 0, 2*Math.PI, true, 1);\n                }\n                else if (e.sound === 'bass') {\n                    this.fillRect(x - dimX, y - dimY, dimX * 2, dimY * 2, true, 1);\n                }\n                else if (e.sound === 'perc') {\n                    this.fillQuad(  x - dimX, y, x, y - dimY, \n                                    x + dimX, y, x, y + dimY, true, 1);\n                }\n            }\n            else this.drawBrokenEgg(e, x, y, dimX, dimY, true, 1);\n            if (e.position.x < game.playerWidth) {\n                pos = this.gamePositionToCanvasPosition(e.position.x + (players.length * game.playerWidth), e.position.y);\n                x = pos[0];\n                y = pos[1];\n                this.strokeWeight((dimX + dimY) * 0.0625, 1);\n                if (e.hp > 0) {\n                    if (e.sound === 'melody') {\n                        this.fillEllipse(x, y, dimX, dimY, 0, 0, 2*Math.PI, true, 1);\n                    }\n                    else if (e.sound === 'bass') {\n                        this.fillRect(x - dimX, y - dimY, dimX * 2, dimY * 2, true, 1);\n                    }\n                    else if (e.sound === 'perc') {\n                        this.fillQuad(  x - dimX, y, x, y - dimY, \n                                        x + dimX, y, x, y + dimY, true, 1);\n                    }\n                }\n                else this.drawBrokenEgg(e, x, y, dimX, dimY, true, 1);\n            }\n            if (e.animFrames.spawn < animLengths.eggSpawn) e.animFrames.spawn++;\n        }\n    }\n\n    drawStep(step, sound) {\n        for (let n of step) {\n            //console.log(p.animFrames[sound][step][n.pitch]);\n            let gridWidth = game.paletteAttributes[n.palette].gridWidth;\n            let gridHeight = game.paletteAttributes[n.palette].gridHeight;\n            let pos = this.cellToCanvasPosition(n.xPos, n.yPos, gridWidth, gridHeight);\n            let dimX = this.gameXDimToCanvasXDim(game.playerWidth / gridWidth); \n            let dimY = this.gameYDimToCanvasYDim(game.playerHeight / gridHeight);\n            let x = pos[0];\n            let y = pos[1];\n            let c = 'bg';\n            let layer = 1;\n            if (sound === 'melody') {\n                x += dimX * 0.5;\n                y += dimY * 0.5;\n                //dimX *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridWidth, 1);\n                dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                c = 'c1';\n                if (n.dur === '2n') { \n                    c = 'c2'; \n                    dimX *= 2;\n                    dimY *= 2;\n                    layer = 0; \n                }\n                if (n.step === client.melodyStep) c = 'c4';\n                this.fillColor(n.palette, c, layer);\n                this.strokeColor(n.palette, 'bg', layer);\n                this.fillEllipse(x, y, dimX / 2, dimY / 2, 0, 0, 2*Math.PI, true, layer);\n            }\n            else if (sound === 'bass') {\n                y = this.mapToRange(n.animFrame, 0, animLengths.eggNote, 0, y);\n                dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                c = 'c2';\n                if (n.dur === '2n') { \n                    c = 'c3'; \n                    dimX *= (gridWidth / 2); \n                    layer = 0; \n                }\n                if (n.step === client.bassStep) c = 'c4';\n                this.fillColor(n.palette, c, layer);\n                this.strokeColor(n.palette, 'bg', layer);\n                this.fillRect(x, y, dimX, dimY, true, layer);\n            }\n            else if (sound === 'perc') {\n                x += dimX * 0.5;\n                y += dimY * 0.5;\n                dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight / 2, 1);\n                let x1 = x - (dimX * 0.5);\n                let y1 = y;\n                let x2 = x;\n                let y2 = y - (dimY * 0.5);\n                let x3 = x + (dimX * 0.5);\n                let y3 = y;\n                let x4 = x;\n                let y4 = y + (dimY * 0.5);\n                c = 'c3'\n                if (n.dur === '2n') { \n                    c = 'c1'; \n                    x2 += dimX;\n                    x4 -= dimX\n                    layer = 0;             \n                }\n                if (n.step === client.percStep) c = 'c4';\n                this.fillColor(n.palette, c, layer);\n                this.strokeColor(n.palette, 'bg', layer);\n                this.fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, true, layer);\n            }\n            if (n.xPos < gridWidth) {\n                let pos = this.cellToCanvasPosition(n.xPos + (gridWidth * players.length), n.yPos, gridWidth, gridHeight);\n                let x = pos[0];\n                let y = pos[1];\n                let c = 'bg';\n                let layer = 1;\n                if (sound === 'melody') {\n                    x += dimX * 0.5;\n                    y += dimY * 0.5;\n                    //dimX *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridWidth, 1);\n                    dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                    c = 'c1';\n                    if (n.dur === '2n') { \n                        c = 'c2'; \n                        dimX *= 2;\n                        dimY *= 2;\n                        layer = 0; \n                    }\n                    if (n.step === client.melodyStep) c = 'c4';\n                    this.fillColor(n.palette, c, layer);\n                    this.strokeColor(n.palette, 'bg', layer);\n                    this.fillEllipse(x, y, dimX / 2, dimY / 2, 0, 0, 2*Math.PI, true, layer);\n                }\n                else if (sound === 'bass') {\n                    y = this.mapToRange(n.animFrame, 0, animLengths.eggNote, 0, y);\n                    dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight, 1);\n                    c = 'c2';\n                    if (n.dur === '2n') { \n                        c = 'c3'; \n                        dimX *= (gridWidth / 2); \n                        layer = 0; \n                    }\n                    if (n.step === client.bassStep) c = 'c4';\n                    this.fillColor(n.palette, c, layer);\n                    this.strokeColor(n.palette, 'bg', layer);\n                    this.fillRect(x, y, dimX, dimY, true, layer);\n                }\n                else if (sound === 'perc') {\n                    x += dimX * 0.5;\n                    y += dimY * 0.5;\n                    dimY *= this.mapToRange(n.animFrame, 0, animLengths.eggNote, gridHeight / 2, 1);\n                    let x1 = x - (dimX * 0.5);\n                    let y1 = y;\n                    let x2 = x;\n                    let y2 = y - (dimY * 0.5);\n                    let x3 = x + (dimX * 0.5);\n                    let y3 = y;\n                    let x4 = x;\n                    let y4 = y + (dimY * 0.5);\n                    c = 'c3'\n                    if (n.dur === '2n') { \n                        c = 'c1'; \n                        x2 += dimX;\n                        x4 -= dimX\n                        layer = 0;             \n                    }\n                    if (n.step === client.percStep) c = 'c4';\n                    this.fillColor(n.palette, c, layer);\n                    this.strokeColor(n.palette, 'bg', layer);\n                    this.fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, true, layer);\n                }\n            }\n\n            if (n.animFrame < animLengths.eggNote) n.animFrame++;\n        }\n    }\n\n    setRendererSize() {\n        w = canvas[0].width = canvas[1].width = this.canvas.width = window.innerWidth;\n        h = canvas[0].height = canvas[1].height = this.canvas.height = window.innerHeight;\n    }\n\n    gamePositionToCanvasPosition(gameX, gameY) {\n        let div = players.length;\n        if (client.performanceView) div = 1;\n        let canvasX = Math.floor(this.mapToRange(gameX, leftViewBound, rightViewBound, 0, w));\n        let canvasY = Math.floor(this.mapToRange(gameY, 0, game.playerHeight, 0, h / div)); \n        return [canvasX, canvasY];\n    }\n\n    gameXDimToCanvasXDim(gameX) {\n        let div = players.length;\n        if (client.performanceView) div = 1;\n        return this.mapToRange(gameX, 0, game.playerWidth, 0, w / div);\n    }\n\n    gameYDimToCanvasYDim(gameY) {\n        let div = players.length;\n        if (client.performanceView) div = 1;\n        return this.mapToRange(gameY, 0, game.playerHeight, 0, h / div);\n    }\n\n    cellToCanvasPosition(cellX, cellY, cellsXPerPlayer, cellsYPerPlayer) {\n        let gameX = (game.playerWidth / cellsXPerPlayer) * cellX;\n        let gameY = (game.playerHeight / cellsYPerPlayer) * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    playerCellToCanvasPosition(p, cellX, cellY, cellsXPerPlayer, cellsYPerPlayer) {\n        let gameX = (game.playerWidth / cellsXPerPlayer) * (cellX + (p.number * cellsXPerPlayer));\n        let gameY = (game.playerHeight / cellsYPerPlayer) * cellY;\n        return this.gamePositionToCanvasPosition(gameX, gameY);\n    }\n\n    mapToRange(val, l1, h1, l2, h2) {\n        return (l2 + (h2 - l2) * (val - l1) / (h1 - l1));\n    }\n\n    drawBrokenEgg(e, x, y, radiusX, radiusY, stroke, layer) {\n        let gapX = radiusX * (e.animFrames.break / animLengths.eggBreak);\n        let gapY = radiusY * (e.animFrames.break / animLengths.eggBreak);\n        this.fillEllipse(x+gapX, y-gapY, radiusX, radiusY, 0, 0, 0.5*Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y-gapY, radiusX, radiusY, 0, 0.5*Math.PI, Math.PI, stroke, layer)\n        this.fillEllipse(x-gapX, y+gapY, radiusX, radiusY, 0, Math.PI, 1.5*Math.PI, stroke, layer)\n        this.fillEllipse(x+gapX, y+gapY, radiusX, radiusY, 0, 1.5*Math.PI, 2*Math.PI, stroke, layer)\n        if (e.animFrames.break < animLengths.eggBreak) e.animFrames.break++\n    }\n    \n    strokeWeight(weight, layer) {\n        ctx[layer].lineWidth = weight;\n    }\n\n    strokeColor(pal, which, layer) {\n        if (paletteTable[pal]) {\n            ctx[layer].strokeStyle = paletteTable[pal][which];\n        }  \n        else ctx[layer].strokeStyle = paletteTable[0][which];\n    }\n\n    fillColor(pal, which, layer) {\n        if (paletteTable[pal]) {\n            ctx[layer].fillStyle = paletteTable[pal][which];\n        }  \n        else ctx[layer].fillStyle = paletteTable[0][which];\n    }\n\n    fillEllipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle);\n        ctx[layer].fill();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillTriangle(x1, y1, x2, y2, x3, y3, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n\n    fillRect(x, y, dimX, dimY, stroke, layer) {\n        ctx[layer].fillRect(x, y, dimX, dimY);\n        if (stroke) ctx[layer].strokeRect(x, y, dimX, dimY);\n    }\n\n    fillQuad(x1, y1, x2, y2, x3, y3, x4, y4, stroke, layer) {\n        ctx[layer].beginPath();\n        ctx[layer].moveTo(x1, y1);\n        ctx[layer].lineTo(x2, y2);\n        ctx[layer].lineTo(x3, y3);\n        ctx[layer].lineTo(x4, y4);\n        ctx[layer].fill();\n        ctx[layer].closePath();\n        if (stroke) ctx[layer].stroke();\n    }\n}\n"],"file":"InterferenceRenderer.js"}