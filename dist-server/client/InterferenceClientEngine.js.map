{"version":3,"sources":["../../src/client/InterferenceClientEngine.js"],"names":["InterferenceClientEngine","gameEngine","options","InterferenceRenderer","syncClient","transportSyncCount","transport","Transport","room","player","players","eggs","eggSynths","performanceView","viewLock","controls","KeyboardControls","prevState","fullscreen","optionSelection","localControls","melodyStep","bassStep","percStep","sequences","on","preStepLogic","bind","postStepLogic","onUpdatePalette","e","onEggBounce","onPlayerHitEgg","onEggBroke","controlString","state","start","seconds","getSyncTime","pause","elem","renderer","canvas","document","fullscreenElement","requestFullscreen","navigationUI","then","catch","err","exitFullscreen","pointerLockElement","body","mozPointerLockElement","exitPointerLock","requestPointerLock","optionString","console","log","btn","getElementById","roomNameInput","roomNameErrorText","querySelector","onclick","regex","exec","value","assignToRoom","substring","style","display","mozRequestPointerLock","addEventListener","activeElement","code","executeOption","executeLocalControl","socket","roomName","startSyncClient","startTime","performance","now","SyncClient","pingId","clientPingTime","request","emit","callback","data","response","serverPingTime","serverPongTime","status","bindKey","transportSyncInterval","world","queryObject","playerId","reverb","palette","initSound","playersByRoom","_roomName","p","gridString","grid","JSON","parse","queryObjects","instanceType","Egg","stage","Note","note","id","clientIDSpace","serverCopy","resolveShadowObject","animFrame","pal","paletteAttributes","step","position","x","gridWidth","pitch","gridHeight","yPos","scale","length","ownerId","sound","push","melodySequence","nextDiv","bassSequence","percSequence","Object","keys","includes","toString","constructEggSynths","vol","Math","abs","number","floor","playerWidth","drone","volume","rampTo","prevStage","palettes","indexOf","i","j","stringify","positionIsInPlayer","bounce","triggerAttackRelease","hp","ammo","shadowId","getNewShadowId","y","pos","quantizedPosition","dur","subdivision","notes","queryNotes","xPos","newNote","vel","TwoVector","inputId","addObjectToWorld","triggerRelease","break","Reverb","toMaster","delay","FeedbackDelay","generate","events","melodySynth","PolySynth","Synth","Sequence","time","melody","seqStep","playNoteArrayOnSynth","bassSynth","AMSynth","bass","percSynth","FMSynth","perc","synth","oscillator","type","envelope","attack","decay","sustain","release","NoiseSynth","noise","breakSynth","playNoteOnSynth","connect","triggerAttack","loop","octaveShift","degree","octave","noteArray","div","getSecondsAtTime","nextSubdivision","ClientEngine"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls, TwoVector } from 'lance-gg';\nimport SyncClient from '@ircam/sync/client';\nimport InterferenceRenderer from '../client/InterferenceRenderer';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Transport, Frequency, Sequence, Loop, Synth, MonoSynth, PolySynth, NoiseSynth, FMSynth, AMSynth, MetalSynth } from 'tone';\nimport { Reverb, FeedbackDelay, BitCrusher, AutoWah } from 'tone';\n\nexport default class InterferenceClientEngine extends ClientEngine {\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// INITIALIZATION AND CONNECTION\n    constructor(gameEngine, options) {\n        super(gameEngine, options, InterferenceRenderer);\n\n        this.syncClient = null;\n        this.transportSyncCount = 0;\n        this.transport = Transport;\n        this.room = null;\n        this.player = null;\n        this.players = [];\n        this.eggs = [];\n        this.eggSynths = {};\n        this.performanceView = false;\n        this.viewLock = false;\n        this.controls = new KeyboardControls(this);\n        this.prevState = 'setup';\n        this.fullscreen = false;\n        this.optionSelection = {};\n        this.localControls = {\n            //'Backquote': 'ToggleTransport',\n            'KeyF': 'ToggleFullscreen',\n            'KeyH': 'ToggleCursor',\n            'KeyV': 'ToggleView',\n            'Slash': 'ToggleLock'\n        };\n        this.melodyStep = 0;\n        this.bassStep = 0;\n        this.percStep = 0;\n        this.sequences = {};\n\n        this.gameEngine.on('client__preStep', this.preStepLogic.bind(this));\n        this.gameEngine.on('client__postStep', this.postStepLogic.bind(this));\n        this.gameEngine.on('updatePalette', () => { this.onUpdatePalette() });\n        this.gameEngine.on('eggBounce', e => { this.onEggBounce(e) });\n        this.gameEngine.on('playerHitEgg', e => { this.onPlayerHitEgg(e) });\n        this.gameEngine.on('eggBroke', e => { this.onEggBroke(e) });\n    }\n\n    executeLocalControl(controlString) {\n        if (controlString === 'ToggleTransport') {\n            if (this.transport.state !== 'started') {\n                this.transport.start('+0.1');\n                this.transport.seconds = this.syncClient.getSyncTime();\n                //this.sequencerLoop(0);\n            }   \n            else {\n                this.transport.pause();\n            }\n        }\n        else if (controlString === 'ToggleFullscreen') {\n            if (!this.viewLock) {\n                let elem = this.renderer.canvas;\n                if (!document.fullscreenElement) {\n                    elem.requestFullscreen({navigationUI: 'hide'}).then({}).catch(err => {\n                        //alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n                    });\n                } else {\n                    document.exitFullscreen();\n                }\n            }\n        }\n        else if (controlString === 'ToggleCursor') {\n            if (!this.viewLock) {\n                if (document.pointerLockElement === document.body || \n                    document.mozPointerLockElement === document.body) {\n                    document.exitPointerLock();\n                } else {\n                    document.body.requestPointerLock();\n                }\n            }\n        }\n        else if (controlString === 'ToggleView') {\n            //console.log('view');\n            if (!this.viewLock) this.performanceView = !this.performanceView;\n        }\n        else if (controlString === 'ToggleLock') {\n            //console.log('lock');\n            this.viewLock = !this.viewLock;\n        }\n    }\n\n    executeOption(optionString) {\n        console.log(optionString);\n    }\n\n    start() {\n        super.start()\n\n        let btn = document.getElementById('startButton');\n        let roomNameInput = document.getElementById('roomNameInput');\n        let roomNameErrorText = document.querySelector('#startMenu .room-input-error');\n\n        btn.onclick = () => {\n            let regex = /^\\w+$/;\n            if (regex.exec(roomNameInput.value) != null) {\n                this.assignToRoom(roomNameInput.value.substring(0, 20));\n            } else {\n                roomNameErrorText.style.display = 'inline';\n            }\n        };\n\n        document.body.requestPointerLock = document.body.requestPointerLock || document.body.mozRequestPointerLock;\n\n        // LOCAL CONTROLS\n        // Any inputs that do nothing server-side (i.e. doesn't need to be known by other players)\n        document.addEventListener('keypress', e => {\n            //console.log(e.code);\n            if (document.activeElement === roomNameInput) {\n                if (e.code === 'Enter') {\n                    let regex = /^\\w+$/;\n                    if (regex.exec(roomNameInput.value) != null) {\n                        this.assignToRoom(roomNameInput.value.substring(0, 20));\n                    } else {\n                        roomNameErrorText.style.display = 'inline';\n                    }\n                }\n            }\n            else {\n                if (this.optionSelection[e.code]) {\n                    this.executeOption(this.optionSelection[e.code]);\n                }\n                if (this.localControls[e.code]) {\n                    this.executeLocalControl(this.localControls[e.code]);\n                }\n            }\n        });\n    }\n\n    connect(options = {}) {\n        return super.connect().then(() => {\n            this.socket.on('assignedRoom', roomName => { \n                this.startSyncClient(this.socket);\n                this.room = roomName;\n                this.transport.start('+0.1');\n            });\n        });\n    }\n\n    startSyncClient(socket) {\n        const startTime = performance.now();\n        this.syncClient = new SyncClient(() => { return (performance.now() - startTime) / 1000 });\n        this.syncClient.start(\n            // send function\n            (pingId, clientPingTime) => {\n                var request = [];\n                request[0] = 0; // we send a ping\n                request[1] = pingId;\n                request[2] = clientPingTime;\n\n                //console.log('[ping] - id: %s, pingTime: %s', request[1], request[2]);\n\n                this.socket.emit('syncClientData', request);\n            },       \n            // receive function  \n            callback => {\n                // unpack args before executing the callback\n                this.socket.on('syncServerData', function (data) {\n                    var response = data;\n\n                    if (response[0] === 1) { // this is a pong\n                        var pingId = response[1];\n                        var clientPingTime = response[2];\n                        var serverPingTime = response[3];\n                        var serverPongTime = response[4];\n\n                        //console.log('[pong] - id: %s, clientPingTime: %s, serverPingTime: %s, serverPongTime: %s',\n                        //pingId, clientPingTime, serverPingTime, serverPongTime);\n\n                        callback(pingId, clientPingTime, serverPingTime, serverPongTime);\n                    }\n                });\n            }, \n            // status report function\n            status => { }//console.log(status); }\n        );\n    }\n\n    assignToRoom(roomName) {\n        if (this.socket) {\n            this.socket.emit('assignToRoom', roomName);\n            document.getElementById('startMenuWrapper').style.display = 'none';\n            // NETWORKED CONTROLS\n            // These inputs will also be processed on the server\n            //console.log('binding keys');\n            //this.controls.bindKey('space', 'space');\n            this.controls.bindKey('open bracket', '[');\n            this.controls.bindKey('close bracket / å', ']');\n            this.controls.bindKey('n', 'n');\n            this.controls.bindKey('b', 'b'); // begin\n            this.controls.bindKey('c', 'c'); // change color\n            this.controls.bindKey('space', 'space');\n            this.controls.bindKey('q', 'q');\n            this.controls.bindKey('w', 'w');\n            this.controls.bindKey('e', 'e');\n            this.controls.bindKey('a', 'a');\n            this.controls.bindKey('s', 's');\n            this.controls.bindKey('d', 'd');\n        }\n    } \n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// SOUND HANDLING AND CLIENT LOGIC\n\n    /// STEP\n    preStepLogic() {\n        if (this.room == null) return; //if we've yet to be assigned a room, don't do this stuff\n\n        if (this.transport.state === 'started') {\n            if (this.transportSyncCount >= this.gameEngine.transportSyncInterval) {\n                this.transport.seconds = this.syncClient.getSyncTime();\n                this.transportSyncCount = 0;\n                //console.log(client.transport.state);\n            }\n            this.transportSyncCount++;\n        }\n    }\n\n\n    postStepLogic() {\n        if (this.room == null) return; //if we've yet to be assigned a room, don't do this stuff\n\n        this.player = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n        if (this.player == null) return;\n        if (this.reverb == null && this.player.palette != 0) this.initSound();\n\n        this.players = this.gameEngine.playersByRoom[this.player._roomName];//this.gameEngine.world.queryObjects({ instanceType: Performer });\n        for (let p of this.players) {\n            if (p.gridString != null) p.grid = JSON.parse(p.gridString);\n        }\n\n        this.eggs = this.gameEngine.world.queryObjects({ instanceType: Egg });\n\n        let stage = this.player.stage;\n\n        this.sequences = {};\n        for (let note of this.gameEngine.world.queryObjects({ instanceType: Note })) {\n            if (note.id >= this.gameEngine.options.clientIDSpace) {\n                let serverCopy = this.gameEngine.resolveShadowObject(note);\n                if (serverCopy != null) {\n                    serverCopy.animFrame = note.animFrame;\n                    continue;\n                }\n            }\n            //console.log(note);\n            let pal = this.gameEngine.paletteAttributes[note.palette];\n            //note.step = note.xPos % pal.gridWidth;\n            note.step = note.position.x % pal.gridWidth;\n            note.pitch = (pal.gridHeight - note.yPos) + (pal.scale.length * 4);\n            if (this.sequences[note.ownerId] == null) this.sequences[note.ownerId] = {};\n            if (this.sequences[note.ownerId].player == null) this.sequences[note.ownerId].player = this.gameEngine.world.queryObject({ playerId: note.ownerId });\n            if (this.sequences[note.ownerId][note.sound] == null) this.sequences[note.ownerId][note.sound] = [];\n            if (this.sequences[note.ownerId][note.sound][note.step] == null) this.sequences[note.ownerId][note.sound][note.step] = [];\n            this.sequences[note.ownerId][note.sound][note.step].push(note);\n        }\n\n        if (stage === 'setup') {\n\n        }\n        else if (stage !== 'setup') {\n            if (this.transport.state !== 'started') {// && this.prevStage !== stage) {\n                this.transport.start('+1');\n                this.transport.seconds = this.syncClient.getSyncTime();\n            }\n            if (this.melodySequence.state !== 'started') {\n                //console.log('start seq');\n                this.melodySequence.start(this.nextDiv('1m'));\n            }\n            if (this.bassSequence.state !== 'started') {\n                //console.log('start seq');\n                this.bassSequence.start(this.nextDiv('4m'));\n            }\n            if (this.percSequence.state !== 'started') {\n                //console.log('start seq');\n                this.percSequence.start(this.nextDiv('2m'));\n            }\n            for (let e of this.eggs) {\n                if (!Object.keys(this.eggSynths).includes(e.toString())) this.constructEggSynths(e);\n                let vol = 1 - (0.5 * Math.abs(this.player.number - Math.floor(e.position.x / this.gameEngine.playerWidth)));\n                if (vol < 0) vol = 0;\n                this.eggSynths[e.toString()].drone.volume.rampTo(vol, 0.1);\n            }\n        }\n        this.prevStage = stage;\n    }\n\n    /// GAME EVENTS\n\n    onUpdatePalette() {\n        let palettes = this.gameEngine.palettes;\n        this.player.palette = palettes[(palettes.indexOf(this.player.palette) + 1) % palettes.length];\n        this.socket.emit('updatePalette', this.player.palette);\n        for (let i = 0; i < this.player.grid.length; i++) {\n            for (let j = 0; j < this.player.grid[i].length; j++) {\n                this.player.grid[i][j] = this.player.palette;\n            }\n        }\n        this.player.gridString = JSON.stringify(this.player.grid);\n        this.initSound();\n    }\n\n    onEggBounce(e) {\n        if (!Object.keys(this.eggSynths).includes(e.toString())) this.constructEggSynths(e);\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSynths[e.toString()].bounce.triggerAttackRelease('8n', '+0', 0.1);\n        }\n    }\n\n    onPlayerHitEgg(e) {\n        let p = this.player;\n        if (e.hp <= 0) return;\n        if (p.ammo <= 0) return;\n        p.ammo--;\n        e.hp--;\n\n        let pal = this.gameEngine.paletteAttributes[p.palette];\n        let shadowId = this.gameEngine.getNewShadowId();\n        this.socket.emit('playerHitEgg', p.ammo, e.id, e.hp, e.position.x, e.position.y, e.sound, shadowId);\n        let pos = this.gameEngine.quantizedPosition(e.position.x, e.position.y, pal.gridWidth, pal.gridHeight);\n        let scale = pal.scale; //TODO should base this on palette of the cell?\n        let pitch = (pal.gridHeight - pos[1]) + (scale.length * 4);\n        let dur = pal[e.sound].subdivision;\n\n        let notes = this.gameEngine.queryNotes({            \n            ownerId: p.playerId, \n            palette: p.grid[pos[0]%pal.gridWidth][pos[1]%pal.gridHeight],\n            sound: e.sound, \n            pitch: pitch, \n            //vel: 1, \n            xPos: pos[0],\n            yPos: pos[1]\n        });\n        if (notes.length) notes[0].dur = '2n';\n        else {\n            let newNote = new Note(this.gameEngine, null, { \n                id: shadowId,\n                ownerId: p.playerId, \n                palette: p.grid[pos[0]%pal.gridWidth][pos[1]%pal.gridHeight],\n                sound: e.sound, \n                pitch: pitch, \n                dur: dur,\n                vel: 1, \n                xPos: pos[0],\n                yPos: pos[1],\n                position: new TwoVector(pos[0], pos[1])\n            });\n            newNote.inputId = shadowId;\n            this.gameEngine.addObjectToWorld(newNote);\n        }\n    }\n\n    onEggBroke(e) {\n        if (this.eggSynths == null) return;\n        if (this.eggSynths[e.toString()] == null) return;\n        console.log('egg broke');\n        this.eggSynths[e.toString()].drone.triggerRelease();\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSynths[e.toString()].break.start(this.nextDiv('4n'));\n            this.optionSelection['Digit1'] = 'tetrisChain';\n            }\n        }\n\n    //// SOUND\n\n    initSound() {\n\n        //this.transport.timeSignature = 4;\n\n        this.reverb = new Reverb(5).toMaster();\n        this.delay = new FeedbackDelay();\n        //this.bitcrusher = new BitCrusher(4).connect(this.reverb); \n        this.reverb.generate();\n        //this.bitcrusher.start();\n        /*\n        this.synth = new Synth({\n            oscillator: {\n                type: 'sine',\n            },\n            envelope: {\n                attack: 0,\n                decay: 0.1,\n                sustain: 0,\n                release: 0.1,\n            }\n        }).toMaster();\n        */\n        let pal = this.gameEngine.paletteAttributes[this.player.palette];\n\n        let events = [];\n        for (let i = 0; i < pal.gridWidth; i++) {\n           events.push(i);\n        }\n\n        this.melodySynth = new PolySynth(pal.gridHeight, Synth).toMaster();\n\n        this.melodySequence = new Sequence((time, step) => {\n            this.melodyStep = step;\n            if (this.sequences[this.player.playerId] == null) return;\n            if (this.sequences[this.player.playerId].melody == null) return;\n            let seqStep = this.sequences[this.player.playerId].melody[this.melodyStep];\n            if (seqStep) this.playNoteArrayOnSynth(this.melodySynth, seqStep, pal.scale, 2, time, true);\n        }, events, pal.melody.subdivision);\n\n\n        this.bassSynth = new PolySynth(pal.gridHeight, AMSynth).toMaster();\n\n        this.bassSequence = new Sequence((time, step) => {\n            this.bassStep = step; \n            if (this.sequences[this.player.playerId] == null) return;\n            if (this.sequences[this.player.playerId].bass == null) return;\n            let seqStep = this.sequences[this.player.playerId].bass[this.bassStep];\n            if (seqStep) this.playNoteArrayOnSynth(this.bassSynth, seqStep, pal.scale, -1, time, true);       \n        }, events, pal.bass.subdivision);\n\n\n        this.percSynth = new PolySynth(pal.gridHeight, FMSynth).toMaster();\n\n        this.percSequence = new Sequence((time, step) => {\n            this.percStep = step;\n            if (this.sequences[this.player.playerId] == null) return;\n            if (this.sequences[this.player.playerId].perc == null) return;\n            let seqStep = this.sequences[this.player.playerId].perc[this.percStep];\n            if (seqStep) this.playNoteArrayOnSynth(this.percSynth, seqStep, pal.scale, 0, time, true);\n        }, events, pal.perc.subdivision);\n    }\n\n    constructEggSynths(e) {\n        if (this.player == null) return;\n        let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n\n        if (e.sound === 'melody') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSynths[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playNoteOnSynth(synth, note, scale, 6, '64n', time, 0.1);\n                }, [[4, 2, 3, 1, 3, 1, 2, 0], null, null, null], '4n')\n            };\n        }\n        else if (e.sound === 'bass') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSynths[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playNoteOnSynth(synth, note, scale, 6, '64n', time, 0.1);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n        else if (e.sound === 'perc') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSynths[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playNoteOnSynth(synth, note, scale, 6, '64n', time, 0.1);\n                }, [[0, 4, null, null, null, null, 1, 5], null, null, null], '4n')\n            };\n        }\n\n        this.eggSynths[e.toString()].drone.connect(this.reverb);\n        this.eggSynths[e.toString()].bounce.connect(this.reverb);\n        this.eggSynths[e.toString()].breakSynth.connect(this.reverb);\n        this.eggSynths[e.toString()].drone.triggerAttack('+0', 0.01);\n        this.eggSynths[e.toString()].break.loop = true;\n    }\n\n    playNoteOnSynth(synth, note, scale, octaveShift, dur, time, vel) {\n        if (!note) return;\n        //console.log(note);\n        let degree = note % scale.length;\n        let octave = Math.floor(note / scale.length) + octaveShift;\n        let pitch = Frequency(scale[degree] + (12 * octave), 'midi');\n        //console.log(scale[degree] + (12 * octave));\n        synth.triggerAttackRelease(pitch, dur, time, vel);\n    }\n\n    playNoteArrayOnSynth(synth, noteArray, scale, octaveShift, time) {\n        if (!noteArray) return;\n\n        //console.log(note);\n        for (let note of noteArray) {\n            //let scale = this.gameEngine.paletteAttributes[this.player.grid[note.cell.x][note.cell.y]];\n            this.playNoteOnSynth(synth, note.pitch, scale, octaveShift, note.dur, time, note.vel);\n        }\n    }\n\n    nextDiv(div) {\n        return Transport.getSecondsAtTime(Transport.nextSubdivision(div));\n    }\n}\n"],"file":"InterferenceClientEngine.js"}