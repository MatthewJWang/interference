{"version":3,"sources":["../../src/client/InterferenceClientEngine.js"],"names":["durs","scaleTable","noteIndex","rhythmIndex","viewLock","InterferenceClientEngine","gameEngine","options","InterferenceRenderer","syncClient","transport","Transport","player","room","players","eggs","eggSounds","performanceView","controls","KeyboardControls","prevState","fullscreen","optionSelection","graphicNotes","egg","melody","bass","perc","sequences","currentStep","on","stepLogic","bind","e","onEggBounce","onPlayerHitEgg","onEggBroke","btn","document","getElementById","roomNameInput","roomNameErrorText","querySelector","onclick","regex","exec","value","assignToRoom","substring","style","display","body","requestPointerLock","mozRequestPointerLock","addEventListener","activeElement","code","executeOption","state","start","seconds","getSyncTime","pause","elem","renderer","canvas","fullscreenElement","requestFullscreen","navigationUI","then","catch","err","exitFullscreen","pointerLockElement","mozPointerLockElement","exitPointerLock","reverb","Reverb","toMaster","delay","FeedbackDelay","autowah","AutoWah","connect","synth","Synth","oscillator","type","envelope","attack","decay","sustain","release","eggMelodySynth","PolySynth","events","eggMelodySequence","Sequence","time","step","seqStep","playScaleNoteOnPolySynth","notes","socket","roomName","startSyncClient","startEffects","startTime","performance","now","SyncClient","pingId","clientPingTime","request","emit","callback","data","response","serverPingTime","serverPongTime","status","bindKey","world","queryObject","playerId","queryObjects","instanceType","Performer","Egg","stage","prevStage","nextDiv","Object","keys","includes","toString","constructEggSounds","vol","Math","abs","number","floor","position","x","playerWidth","drone","volume","rampTo","optionString","console","log","positionIsInPlayer","bounce","triggerAttackRelease","scale","palette","pos","playerQuantizedPosition","y","note","playerCellHeight","length","dur","sound","indexOf","push","duration","cell","sequence","range","animFrame","triggerRelease","break","generate","NoiseSynth","noise","breakSynth","playScaleNoteOnSynth","triggerAttack","loop","octaveShift","degree","octave","chord","div","getSecondsAtTime","nextSubdivision","ClientEngine"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls } from 'lance-gg';\nimport SyncClient from '@ircam/sync/client';\nimport InterferenceRenderer from '../client/InterferenceRenderer';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Transport, Frequency, Part, Sequence, Synth, MonoSynth, PolySynth, NoiseSynth, FMSynth } from 'tone';\nimport { Reverb, FeedbackDelay, BitCrusher, AutoWah } from 'tone';\n\nconst durs = ['4n', '8n', '6n'];\nconst scaleTable = {\n    'rain':     [0, 4, 6, 9, 11],\n    'celeste':  [0, 2, 3, 5, 7],\n    'pyre':     [0, 2, 3, 7, 10],\n    'journey':  [0, 2, 4, 7, 9],\n    'kirby':    [0, 2, 4, 5, 7],\n    'default':  [0, 2, 4, 5, 7]\n}\nlet noteIndex = 0;\nlet rhythmIndex = 0;\nlet viewLock = false;\n\nexport default class InterferenceClientEngine extends ClientEngine {\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// INITIALIZATION AND CONNECTION\n    constructor(gameEngine, options) {\n        super(gameEngine, options, InterferenceRenderer);\n\n        this.syncClient = null;\n        this.transport = Transport;\n        this.player = null;\n        this.room = null;\n        this.players = [];\n        this.eggs = [];\n        this.eggSounds = {};\n        this.performanceView = false;\n        this.controls = new KeyboardControls(this);\n        this.prevState = 'setup';\n        this.fullscreen = false;\n        this.optionSelection = {};\n        this.graphicNotes = {\n            egg: {\n                melody: [],\n                bass: [],\n                perc: []\n            }\n        };\n        this.sequences = {\n            egg: {\n                melody: [],\n                bass: [],\n                perc: []\n            }\n        };\n        this.currentStep = null;\n\n        this.gameEngine.on('client__postStep', this.stepLogic.bind(this));\n        this.gameEngine.on('eggBounce', e => { this.onEggBounce(e) });\n        this.gameEngine.on('playerHitEgg', e => { this.onPlayerHitEgg(e) });\n        this.gameEngine.on('eggBroke', e => { this.onEggBroke(e) });\n    }\n\n    start() {\n        super.start()\n\n        let btn = document.getElementById('startButton');\n        let roomNameInput = document.getElementById('roomNameInput');\n        let roomNameErrorText = document.querySelector('#startMenu .room-input-error');\n\n        btn.onclick = () => {\n            let regex = /^\\w+$/;\n            if (regex.exec(roomNameInput.value) !== null) {\n                this.assignToRoom(roomNameInput.value.substring(0, 20));\n            } else {\n                roomNameErrorText.style.display = 'inline';\n            }\n        };\n\n        document.body.requestPointerLock = document.body.requestPointerLock || document.body.mozRequestPointerLock;\n\n        // LOCAL CONTROLS\n        // Any inputs that do nothing server-side (i.e. doesn't need to be known by other players)\n        document.addEventListener('keypress', e => {\n            //console.log(e.code);\n            if (document.activeElement === roomNameInput) {\n                if (e.code === 'Enter') {\n                    let regex = /^\\w+$/;\n                    if (regex.exec(roomNameInput.value) !== null) {\n                        this.assignToRoom(roomNameInput.value.substring(0, 20));\n                    } else {\n                        roomNameErrorText.style.display = 'inline';\n                    }\n                }\n            }\n            else {\n                if (this.optionSelection[e.code]) {\n                    this.executeOption(optionSelection[e.code]);\n                }\n                if (e.code === 'Backquote') {\n                    if (this.transport.state !== 'started') {\n                        this.transport.start();\n                        this.transport.seconds = this.syncClient.getSyncTime();\n                        //this.sequencerLoop(0);\n                    }   \n                    else {\n                        this.transport.pause();\n                    }\n                }\n                else if (e.code === 'KeyF') {\n                    if (!viewLock) {\n                        let elem = this.renderer.canvas;\n                        if (!document.fullscreenElement) {\n                            elem.requestFullscreen({navigationUI: 'hide'}).then({}).catch(err => {\n                                //alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n                            });\n                        } else {\n                            document.exitFullscreen();\n                        }\n                    }\n                }\n                else if (e.code === 'KeyH') {\n                    if (!viewLock) {\n                        if (document.pointerLockElement === document.body || \n                            document.mozPointerLockElement === document.body) {\n                            document.exitPointerLock();\n                        } else {\n                            document.body.requestPointerLock();\n                        }\n                    }\n                }\n                else if (e.code === 'KeyV') {\n                    //console.log('view');\n                    if (!viewLock) this.performanceView = !this.performanceView;\n                }\n                else if (e.code === 'Slash') {\n                    //console.log('lock');\n                    viewLock = !viewLock;\n                }\n            }\n        });\n\n        //this.transport.timeSignature = 4;\n\n        this.reverb = new Reverb(1).toMaster();\n        this.delay = new FeedbackDelay()\n        //this.bitcrusher = new BitCrusher(4).connect(this.reverb); \n        this.autowah = new AutoWah().toMaster()\n        this.autowah.connect(this.reverb);  \n\n        this.synth = new Synth({\n            oscillator: {\n                type: 'sine',\n            },\n            envelope: {\n                attack: 0,\n                decay: 0.1,\n                sustain: 0,\n                release: 0.1,\n            }\n        }).toMaster();\n\n        // BUILDERS\n\n        // Tetris Chain\n        this.eggMelodySynth = new PolySynth(9, Synth).toMaster();\n\n        let events = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n        this.eggMelodySequence = new Sequence((time, step) => {\n            this.currentStep = step;\n            let seqStep = this.sequences.egg.melody[step];\n            if (seqStep) this.playScaleNoteOnPolySynth(this.eggMelodySynth, seqStep.notes, 1, seqStep.durs, time)\n        }, events, '16n');\n \n        /*\n        // show try-again button\n        this.gameEngine.on('objectDestroyed', (obj) => {\n            if (obj.playerId === gameEngine.playerId) {\n                document.body.classList.add('lostGame');\n                document.querySelector('#tryAgain').disabled = false;\n            }\n        });\n        */\n        /*\n        this.mouseX = null;\n        this.mouseY = null;\n\n        document.addEventListener('mousemove', this.updateMouseXY.bind(this), false);\n        document.addEventListener('mouseenter', this.updateMouseXY.bind(this), false);\n        document.addEventListener('touchmove', this.updateMouseXY.bind(this), false);\n        document.addEventListener('touchenter', this.updateMouseXY.bind(this), false);\n        this.gameEngine.on('client__preStep', this.sendMouseAngle.bind(this));\n        */\n        \n        /*\n        // click event for \"try again\" button\n        document.querySelector('#tryAgain').addEventListener('click', () => {\n            this.socket.emit('requestRestart');\n        }); */\n        \n        /*\n        document.querySelector('#reconnect').addEventListener('click', () => {\n            window.location.reload();\n        }); */\n\n        //this.controls.bindKey('left', 'left', { repeat: true });\n        //this.controls.bindKey('right', 'right', { repeat: true });\n        //this.controls.bindKey('up', 'up', { repeat: true } );\n    }\n\n    connect(options = {}) {\n        return super.connect().then(() => {\n            this.socket.on('assignedRoom', roomName => { \n                this.room = roomName;\n                this.transport.start();\n                this.startSyncClient(this.socket);\n                this.startEffects();\n            });\n        });\n    }\n\n    startSyncClient(socket) {\n        const startTime = performance.now();\n        this.syncClient = new SyncClient(() => { return (performance.now() - startTime) / 1000 });\n        this.syncClient.start(\n            // send function\n            (pingId, clientPingTime) => {\n                var request = [];\n                request[0] = 0; // we send a ping\n                request[1] = pingId;\n                request[2] = clientPingTime;\n\n                //console.log('[ping] - id: %s, pingTime: %s', request[1], request[2]);\n\n                this.socket.emit('syncClientData', request);\n            },       \n            // receive function  \n            callback => {\n                // unpack args before executing the callback\n                this.socket.on('syncServerData', function (data) {\n                    var response = data;\n\n                    if (response[0] === 1) { // this is a pong\n                        var pingId = response[1];\n                        var clientPingTime = response[2];\n                        var serverPingTime = response[3];\n                        var serverPongTime = response[4];\n\n                        //console.log('[pong] - id: %s, clientPingTime: %s, serverPingTime: %s, serverPongTime: %s',\n                        //pingId, clientPingTime, serverPingTime, serverPongTime);\n\n                        callback(pingId, clientPingTime, serverPingTime, serverPongTime);\n                    }\n                });\n            }, \n            // status report function\n            status => { }//console.log(status); }\n        );\n    }\n\n    assignToRoom(roomName) {\n        if (this.socket) {\n            this.socket.emit('assignToRoom', roomName);\n            document.getElementById('startMenuWrapper').style.display = 'none';\n            // NETWORKED CONTROLS\n            // These inputs will also be processed on the server\n            //console.log('binding keys');\n            this.controls.bindKey('space', 'space');\n            this.controls.bindKey('open bracket', '[');\n            this.controls.bindKey('close bracket / å', ']');\n            this.controls.bindKey('n', 'n');\n            this.controls.bindKey('b', 'b'); // begin\n            this.controls.bindKey('c', 'c'); // change color\n        }\n    } \n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// SOUND HANDLING AND CLIENT LOGIC\n\n    stepLogic() {\n        if (this.room === null) return //if we yet to be assigned a room, don't do this stuff\n        this.player = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n        this.players = this.gameEngine.world.queryObjects({ instanceType: Performer });\n        this.eggs = this.gameEngine.world.queryObjects({ instanceType: Egg });\n        let stage = this.player.stage;\n        if (stage === 'setup') {\n\n        }\n        else if (stage === 'intro') {\n            if (this.transport.state !== 'started' && this.prevStage !== stage) {\n                this.transport.start();\n                this.transport.seconds = this.syncClient.getSyncTime();\n            }\n            if (this.eggMelodySequence.state !== 'started') {\n                //console.log('start seq');\n                this.eggMelodySequence.start(this.nextDiv('1m'));\n            }\n            for (let e of this.eggs) {\n                if (!Object.keys(this.eggSounds).includes(e.toString())) this.constructEggSounds(e);\n                let vol = 1 - (0.3 * Math.abs(this.player.number - Math.floor(e.position.x / this.gameEngine.playerWidth)));\n                if (vol < 0) vol = 0;\n                this.eggSounds[e.toString()].drone.volume.rampTo(vol, 0.1);\n            }\n        }\n        this.prevStage = stage;\n    }\n\n    executeOption(optionString) {\n        console.log(optionString);\n    }\n\n    onEggBounce(e) {\n        if (!Object.keys(this.eggSounds).includes(e.toString())) this.constructEggSounds(e);\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSounds[e.toString()].bounce.triggerAttackRelease('8n');\n        }\n    }\n\n    onPlayerHitEgg(e) {\n        let scale = scaleTable[this.player.palette];\n        let pos = this.gameEngine.playerQuantizedPosition(this.player, e.position.x, e.position.y, 16, 9);\n        let step = pos[0];\n        let note = (this.gameEngine.playerCellHeight - pos[1]) + (scale.length * 4);\n        let dur = '16n';\n        //let note = (this.gameEngine.cellsPerPlayer - 1) - ((pos[1] * this.gameEngine.playerCellWidth) + pos[0]);\n        if (this.sequences.egg[e.sound][step]) {\n            if (this.sequences.egg[e.sound][step].notes.includes(note)) {\n                this.sequences.egg[e.sound][step].durs[this.sequences.egg[e.sound][step].notes.indexOf(note)] = '2n';\n                dur = '2n';\n            }\n            else {\n                this.sequences.egg[e.sound][step].notes.push(note);\n                this.sequences.egg[e.sound][step].durs.push('16n');\n            }\n        }\n        else this.sequences.egg[e.sound][step] = { notes: [note], durs: ['16n'] };\n        this.graphicNotes.egg[e.sound].push({\n            duration: dur,\n            step: step,\n            cell: { \n                x: pos[0], \n                y: pos[1] \n            },\n            sequence: {\n                length: 16,\n                range: 9\n            },\n            animFrame: 0\n        });\n    }\n\n    onEggBroke(e) {\n        console.log('egg broke');\n        this.eggSounds[e.toString()].drone.triggerRelease();\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSounds[e.toString()].break.start(this.nextDiv('4n'));\n            this.optionSelection['Digit1'] = 'tetrisChain';\n        }\n    }\n\n    startEffects() {\n        //this.bitcrusher.start();\n        this.reverb.generate();\n    }\n\n    constructEggSounds(e) {\n        //console.log('making egg sounds');\n        let scale = scaleTable[this.player.palette]\n        let synth = new Synth({\n            oscillator: {\n                type: 'triangle',\n            },\n            envelope: {\n                attack: 0.005,\n                decay: 0.5,\n                sustain: 0,\n                release: 0.1,\n            }\n        });\n        this.eggSounds[e.toString()] = {\n            drone: new NoiseSynth({\n                noise: {\n                    type: 'pink',\n                },\n                envelope: {\n                    attack: 1,\n                    decay: 0.1,\n                    sustain: 1,\n                    release: 0.5,\n                }\n            }),\n            bounce: new NoiseSynth({\n                noise: {\n                    type: 'pink',\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.3,\n                    sustain: 0.1,\n                    release: 0.5,\n                }\n            }).toMaster(),\n            breakSynth: synth.toMaster(), \n            break: new Sequence((time, note) => {\n                this.playScaleNoteOnSynth(synth, note, 6, '64n', time)\n            }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n        };\n\n        this.eggSounds[e.toString()].drone.connect(this.autowah);\n        this.eggSounds[e.toString()].bounce.connect(this.reverb);\n        this.eggSounds[e.toString()].breakSynth.connect(this.reverb);\n        this.eggSounds[e.toString()].drone.triggerAttack('+0', 0.1);\n        this.eggSounds[e.toString()].break.loop = true;\n    }\n\n    playScaleNoteOnSynth(synth, note, octaveShift, dur, time) {\n        if (!note) return;\n        //console.log(note);\n        let scale = scaleTable[this.player.palette];\n        let degree = note % scale.length;\n        let octave = Math.floor(note / scale.length) + octaveShift;\n        //console.log(scale[degree] + (12 * octave));\n        synth.triggerAttackRelease(Frequency(scale[degree] + (12 * octave), 'midi'), dur, time);\n    }\n\n    playScaleNoteOnPolySynth(synth, notes, octaveShift, durs, time) {\n        if (!notes) return;\n        //console.log(note);\n        let chord = [];\n        for (let note of notes) {\n            let scale = scaleTable[this.player.palette];\n            let degree = note % scale.length;\n            let octave = Math.floor(note / scale.length) + octaveShift;\n            //console.log(scale[degree] + (12 * octave));\n            chord.push(Frequency(scale[degree] + (12 * octave), 'midi'));\n        }\n        synth.triggerAttackRelease(chord, durs, time);\n    }\n\n    nextDiv(div) {\n        return Transport.getSecondsAtTime(Transport.nextSubdivision(div));\n    }\n    /*\n    sequencerLoop(thisTime) {\n        this.rhythmstack = ['4n'];\n        console.log('step');\n        if (this.notestack.length && this.rhythmstack.length) {\n            if (noteIndex >= this.notestack.length) noteIndex = 0;\n            if (rhythmIndex >= this.rhythmstack.length) rhythmIndex = 0;\n            this.synth.triggerAttackRelease(this.notestack[noteIndex], '8n', thisTime)\n            this.transport.scheduleOnce(nextTime => { this.sequencerLoop(nextTime); }, \n                Transport.getSecondsAtTime(Transport.nextSubdivision(this.rhythmstack[rhythmIndex]))\n            );\n            noteIndex++;\n            rhythmIndex++;\n        }\n        else {\n            noteIndex = 0;\n            rhythmIndex = 0;\n            this.transport.scheduleOnce(nextTime => { this.sequencerLoop(nextTime) }, \n                Transport.getSecondsAtTime(Transport.nextSubdivision('1m'))\n            );\n        }\n    }\n    */\n    /*\n    updateMouseXY(e) {\n        e.preventDefault();\n        if (e.touches) e = e.touches.item(0);\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n    }\n\n    sendMouseAngle() {\n        let player = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n        if (this.mouseY === null || player === null) return;\n\n        let mouseX = (this.mouseX - document.body.clientWidth/2) / this.zoom;\n        let mouseY = (this.mouseY - document.body.clientHeight/2) / this.zoom;\n        let dx = mouseY - player.position.y;\n        let dy = mouseX - player.position.x;\n        if (Math.sqrt(dx * dx + dy * dy) < 0.5) {\n            this.sendInput(this.gameEngine.directionStop, { movement: true });\n            return;\n        }\n\n        let angle = Math.atan2(dx, dy);\n        this.sendInput(angle, { movement: true });\n    }\n    */\n}\n"],"file":"InterferenceClientEngine.js"}