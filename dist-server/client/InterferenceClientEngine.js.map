{"version":3,"sources":["../../src/client/InterferenceClientEngine.js"],"names":["InterferenceClientEngine","gameEngine","options","InterferenceRenderer","syncClient","transport","Transport","player","room","players","eggs","eggSounds","performanceView","viewLock","controls","KeyboardControls","prevState","fullscreen","optionSelection","localControls","currentStep","on","stepLogic","bind","e","onEggBounce","onEggBroke","controlString","state","start","seconds","getSyncTime","pause","elem","renderer","canvas","document","fullscreenElement","requestFullscreen","navigationUI","then","catch","err","exitFullscreen","pointerLockElement","body","mozPointerLockElement","exitPointerLock","requestPointerLock","optionString","console","log","btn","getElementById","roomNameInput","roomNameErrorText","querySelector","onclick","regex","exec","value","assignToRoom","substring","style","display","mozRequestPointerLock","addEventListener","activeElement","code","executeOption","executeLocalControl","socket","roomName","startSyncClient","startTime","performance","now","SyncClient","pingId","clientPingTime","request","emit","callback","data","response","serverPingTime","serverPongTime","status","bindKey","world","queryObject","playerId","reverb","palette","initSound","queryObjects","instanceType","Performer","p","gridString","grid","JSON","parse","Object","keys","sequences","sound","Egg","stage","melodySequence","nextDiv","bassSequence","percSequence","includes","toString","constructEggSounds","vol","Math","abs","number","floor","position","x","playerWidth","drone","volume","rampTo","prevStage","positionIsInPlayer","bounce","triggerAttackRelease","triggerRelease","break","Reverb","toMaster","delay","FeedbackDelay","autowah","AutoWah","connect","generate","events","i","paletteAttributes","gridWidth","push","melodySynth","PolySynth","gridHeight","Synth","Sequence","time","step","seqStep","melody","playStepOnSynth","subdivision","bassSynth","AMSynth","bass","percSynth","FMSynth","perc","scale","synth","oscillator","type","envelope","attack","decay","sustain","release","NoiseSynth","noise","breakSynth","note","playScaleNoteOnSynth","triggerAttack","loop","octaveShift","dur","vel","degree","length","octave","pitch","stepArray","div","getSecondsAtTime","nextSubdivision","ClientEngine"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls } from 'lance-gg';\nimport SyncClient from '@ircam/sync/client';\nimport InterferenceRenderer from '../client/InterferenceRenderer';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Transport, Frequency, Part, Sequence, Synth, MonoSynth, PolySynth, NoiseSynth, FMSynth, AMSynth, MetalSynth } from 'tone';\nimport { Reverb, FeedbackDelay, BitCrusher, AutoWah } from 'tone';\n\nexport default class InterferenceClientEngine extends ClientEngine {\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// INITIALIZATION AND CONNECTION\n    constructor(gameEngine, options) {\n        super(gameEngine, options, InterferenceRenderer);\n\n        this.syncClient = null;\n        this.transport = Transport;\n        this.player = null;\n        this.room = null;\n        this.players = [];\n        this.eggs = [];\n        this.eggSounds = {};\n        this.performanceView = false;\n        this.viewLock = false;\n        this.controls = new KeyboardControls(this);\n        this.prevState = 'setup';\n        this.fullscreen = false;\n        this.optionSelection = {};\n        this.localControls = {\n            //'Backquote': 'ToggleTransport',\n            'KeyF': 'ToggleFullscreen',\n            'KeyH': 'ToggleCursor',\n            'KeyV': 'ToggleView',\n            'Slash': 'ToggleLock'\n        };\n        this.currentStep = null;\n\n        this.gameEngine.on('client__postStep', this.stepLogic.bind(this));\n        this.gameEngine.on('eggBounce', e => { this.onEggBounce(e) });\n        //this.gameEngine.on('playerHitEgg', e => { this.onPlayerHitEgg(e) });\n        this.gameEngine.on('eggBroke', e => { this.onEggBroke(e) });\n    }\n\n    executeLocalControl(controlString) {\n        if (controlString === 'ToggleTransport') {\n            if (this.transport.state !== 'started') {\n                this.transport.start();\n                this.transport.seconds = this.syncClient.getSyncTime();\n                //this.sequencerLoop(0);\n            }   \n            else {\n                this.transport.pause();\n            }\n        }\n        else if (controlString === 'ToggleFullscreen') {\n            if (!this.viewLock) {\n                let elem = this.renderer.canvas;\n                if (!document.fullscreenElement) {\n                    elem.requestFullscreen({navigationUI: 'hide'}).then({}).catch(err => {\n                        //alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n                    });\n                } else {\n                    document.exitFullscreen();\n                }\n            }\n        }\n        else if (controlString === 'ToggleCursor') {\n            if (!this.viewLock) {\n                if (document.pointerLockElement === document.body || \n                    document.mozPointerLockElement === document.body) {\n                    document.exitPointerLock();\n                } else {\n                    document.body.requestPointerLock();\n                }\n            }\n        }\n        else if (controlString === 'ToggleView') {\n            //console.log('view');\n            if (!this.viewLock) this.performanceView = !this.performanceView;\n        }\n        else if (controlString === 'ToggleLock') {\n            //console.log('lock');\n            this.viewLock = !this.viewLock;\n        }\n    }\n\n    executeOption(optionString) {\n        console.log(optionString);\n    }\n\n    start() {\n        super.start()\n\n        let btn = document.getElementById('startButton');\n        let roomNameInput = document.getElementById('roomNameInput');\n        let roomNameErrorText = document.querySelector('#startMenu .room-input-error');\n\n        btn.onclick = () => {\n            let regex = /^\\w+$/;\n            if (regex.exec(roomNameInput.value) != null) {\n                this.assignToRoom(roomNameInput.value.substring(0, 20));\n            } else {\n                roomNameErrorText.style.display = 'inline';\n            }\n        };\n\n        document.body.requestPointerLock = document.body.requestPointerLock || document.body.mozRequestPointerLock;\n\n        // LOCAL CONTROLS\n        // Any inputs that do nothing server-side (i.e. doesn't need to be known by other players)\n        document.addEventListener('keypress', e => {\n            //console.log(e.code);\n            if (document.activeElement === roomNameInput) {\n                if (e.code === 'Enter') {\n                    let regex = /^\\w+$/;\n                    if (regex.exec(roomNameInput.value) != null) {\n                        this.assignToRoom(roomNameInput.value.substring(0, 20));\n                    } else {\n                        roomNameErrorText.style.display = 'inline';\n                    }\n                }\n            }\n            else {\n                if (this.optionSelection[e.code]) {\n                    this.executeOption(this.optionSelection[e.code]);\n                }\n                if (this.localControls[e.code]) {\n                    this.executeLocalControl(this.localControls[e.code]);\n                }\n            }\n        });\n    }\n\n    connect(options = {}) {\n        return super.connect().then(() => {\n            this.socket.on('assignedRoom', roomName => { \n                this.room = roomName;\n                this.transport.start();\n                this.startSyncClient(this.socket);\n            });\n        });\n    }\n\n    startSyncClient(socket) {\n        const startTime = performance.now();\n        this.syncClient = new SyncClient(() => { return (performance.now() - startTime) / 1000 });\n        this.syncClient.start(\n            // send function\n            (pingId, clientPingTime) => {\n                var request = [];\n                request[0] = 0; // we send a ping\n                request[1] = pingId;\n                request[2] = clientPingTime;\n\n                //console.log('[ping] - id: %s, pingTime: %s', request[1], request[2]);\n\n                this.socket.emit('syncClientData', request);\n            },       \n            // receive function  \n            callback => {\n                // unpack args before executing the callback\n                this.socket.on('syncServerData', function (data) {\n                    var response = data;\n\n                    if (response[0] === 1) { // this is a pong\n                        var pingId = response[1];\n                        var clientPingTime = response[2];\n                        var serverPingTime = response[3];\n                        var serverPongTime = response[4];\n\n                        //console.log('[pong] - id: %s, clientPingTime: %s, serverPingTime: %s, serverPongTime: %s',\n                        //pingId, clientPingTime, serverPingTime, serverPongTime);\n\n                        callback(pingId, clientPingTime, serverPingTime, serverPongTime);\n                    }\n                });\n            }, \n            // status report function\n            status => { }//console.log(status); }\n        );\n    }\n\n    assignToRoom(roomName) {\n        if (this.socket) {\n            this.socket.emit('assignToRoom', roomName);\n            document.getElementById('startMenuWrapper').style.display = 'none';\n            // NETWORKED CONTROLS\n            // These inputs will also be processed on the server\n            //console.log('binding keys');\n            //this.controls.bindKey('space', 'space');\n            this.controls.bindKey('open bracket', '[');\n            this.controls.bindKey('close bracket / å', ']');\n            this.controls.bindKey('n', 'n');\n            this.controls.bindKey('b', 'b'); // begin\n            this.controls.bindKey('c', 'c'); // change color\n            this.controls.bindKey('q', 'q');\n            this.controls.bindKey('w', 'w');\n            this.controls.bindKey('e', 'e');\n        }\n    } \n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// SOUND HANDLING AND CLIENT LOGIC\n\n    stepLogic() {\n        if (this.room == null) return //if we yet to be assigned a room, don't do this stuff\n        this.player = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n        if (this.player != null && this.reverb == null && this.player.palette != 0) this.initSound(this.player);\n        this.players = this.gameEngine.world.queryObjects({ instanceType: Performer });\n        for (let p of this.players) {\n            if (p.gridString != null) p.grid = JSON.parse(p.gridString);\n            for (let sound of Object.keys(p.sequences)) {\n                p.sequences[sound] = JSON.parse(p[sound]);\n            }\n        }\n        this.eggs = this.gameEngine.world.queryObjects({ instanceType: Egg });\n        let stage = this.player.stage;\n        if (stage === 'setup') {\n\n        }\n        else if (stage === 'intro') {\n            if (this.transport.state !== 'started') {// && this.prevStage !== stage) {\n                this.transport.start();\n                this.transport.seconds = this.syncClient.getSyncTime();\n            }\n            if (this.melodySequence.state !== 'started') {\n                //console.log('start seq');\n                this.melodySequence.start(this.nextDiv('1m'));\n            }\n            if (this.bassSequence.state !== 'started') {\n                //console.log('start seq');\n                this.bassSequence.start(this.nextDiv('1m'));\n            }\n            if (this.percSequence.state !== 'started') {\n                //console.log('start seq');\n                this.percSequence.start(this.nextDiv('1m'));\n            }\n            for (let e of this.eggs) {\n                if (!Object.keys(this.eggSounds).includes(e.toString())) this.constructEggSounds(e);\n                let vol = 1 - (0.5 * Math.abs(this.player.number - Math.floor(e.position.x / this.gameEngine.playerWidth)));\n                if (vol < 0) vol = 0;\n                this.eggSounds[e.toString()].drone.volume.rampTo(vol, 0.1);\n            }\n        }\n        this.prevStage = stage;\n    }\n\n    onEggBounce(e) {\n        if (!Object.keys(this.eggSounds).includes(e.toString())) this.constructEggSounds(e);\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSounds[e.toString()].bounce.triggerAttackRelease('8n');\n        }\n    }\n\n    onEggBroke(e) {\n        console.log('egg broke');\n        this.eggSounds[e.toString()].drone.triggerRelease();\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSounds[e.toString()].break.start(this.nextDiv('4n'));\n            this.optionSelection['Digit1'] = 'tetrisChain';\n        }\n    }\n\n    initSound(p) {\n\n        //this.transport.timeSignature = 4;\n\n        this.reverb = new Reverb(1).toMaster();\n        this.delay = new FeedbackDelay()\n        //this.bitcrusher = new BitCrusher(4).connect(this.reverb); \n        this.autowah = new AutoWah().toMaster()\n        this.autowah.connect(this.reverb);  \n        this.reverb.generate();\n        //this.bitcrusher.start();\n        /*\n        this.synth = new Synth({\n            oscillator: {\n                type: 'sine',\n            },\n            envelope: {\n                attack: 0,\n                decay: 0.1,\n                sustain: 0,\n                release: 0.1,\n            }\n        }).toMaster();\n        */\n        let events = []\n        for (let i = 0; i < this.gameEngine.paletteAttributes[p.palette].gridWidth; i++) {\n           events.push(i);\n        }\n\n        this.melodySynth = new PolySynth(this.gameEngine.paletteAttributes[p.palette].gridHeight, Synth).toMaster();\n        this.melodySequence = new Sequence((time, step) => {\n            this.currentStep = step;\n            let seqStep = this.player.sequences.melody[step];\n            if (seqStep) this.playStepOnSynth(this.melodySynth, seqStep, 2, time, true);\n        }, events, this.gameEngine.paletteAttributes[p.palette].subdivision);\n\n        this.bassSynth = new PolySynth(this.gameEngine.paletteAttributes[p.palette].gridHeight, AMSynth).toMaster();\n        this.bassSequence = new Sequence((time, step) => {\n            this.currentStep = step;\n            let seqStep = this.player.sequences.bass[step];\n            if (seqStep) this.playStepOnSynth(this.bassSynth, seqStep, -2, time, true);\n        }, events, this.gameEngine.paletteAttributes[p.palette].subdivision);\n\n        this.percSynth = new PolySynth(this.gameEngine.paletteAttributes[p.palette].gridHeight, FMSynth).toMaster();\n        this.percSequence = new Sequence((time, step) => {\n            this.currentStep = step;\n            let seqStep = this.player.sequences.perc[step];\n            if (seqStep) this.playStepOnSynth(this.percSynth, seqStep, 0, time, true);\n        }, events, this.gameEngine.paletteAttributes[p.palette].subdivision);\n    }\n\n    constructEggSounds(e) {\n        let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n\n        if (e.sound === 'melody') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSounds[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playScaleNoteOnSynth(synth, note, scale, 6, '64n', time, 0.5);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n        else if (e.sound === 'bass') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSounds[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playScaleNoteOnSynth(synth, note, scale, 6, '64n', time, 0.5);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n        else if (e.sound === 'perc') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSounds[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playScaleNoteOnSynth(synth, note, scale, 6, '64n', time, 0.5);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n\n        this.eggSounds[e.toString()].drone.connect(this.autowah);\n        this.eggSounds[e.toString()].bounce.connect(this.reverb);\n        this.eggSounds[e.toString()].breakSynth.connect(this.reverb);\n        this.eggSounds[e.toString()].drone.triggerAttack('+0', 0.1);\n        this.eggSounds[e.toString()].break.loop = true;\n    }\n\n    playScaleNoteOnSynth(synth, note, scale, octaveShift, dur, time, vel) {\n        if (!note) return;\n        //console.log(note);\n        let degree = note % scale.length;\n        let octave = Math.floor(note / scale.length) + octaveShift;\n        let pitch = Frequency(scale[degree] + (12 * octave), 'midi');\n        //console.log(scale[degree] + (12 * octave));\n        synth.triggerAttackRelease(pitch, dur, time, vel);\n    }\n\n    playStepOnSynth(synth, stepArray, octaveShift, time) {\n        if (!stepArray) return;\n\n        //console.log(note);\n        for (let note of stepArray) {\n            //let scale = this.gameEngine.paletteAttributes[this.player.grid[note.cell.x][note.cell.y]];\n            let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n            this.playScaleNoteOnSynth(synth, note.pitch, scale, octaveShift, note.dur, time, note.vel);\n        }\n    }\n\n    nextDiv(div) {\n        return Transport.getSecondsAtTime(Transport.nextSubdivision(div));\n    }\n}\n"],"file":"InterferenceClientEngine.js"}