{"version":3,"sources":["../../src/client/InterferenceClientEngine.js"],"names":["InterferenceClientEngine","gameEngine","options","InterferenceRenderer","syncClient","transport","Transport","player","room","players","eggs","eggSounds","performanceView","viewLock","controls","KeyboardControls","prevState","fullscreen","optionSelection","localControls","melodyStep","bassStep","percStep","sequences","on","stepLogic","bind","onUpdatePalette","e","onEggBounce","onPlayerHitEgg","onEggBroke","controlString","state","start","seconds","getSyncTime","pause","elem","renderer","canvas","document","fullscreenElement","requestFullscreen","navigationUI","then","catch","err","exitFullscreen","pointerLockElement","body","mozPointerLockElement","exitPointerLock","requestPointerLock","optionString","console","log","btn","getElementById","roomNameInput","roomNameErrorText","querySelector","onclick","regex","exec","value","assignToRoom","substring","style","display","mozRequestPointerLock","addEventListener","activeElement","code","executeOption","executeLocalControl","socket","roomName","startSyncClient","startTime","performance","now","SyncClient","pingId","clientPingTime","request","emit","callback","data","response","serverPingTime","serverPongTime","status","bindKey","world","queryObject","playerId","reverb","palette","initSound","queryObjects","instanceType","Performer","p","gridString","grid","JSON","parse","Egg","stage","Note","note","id","clientIDSpace","serverCopy","resolveShadowObject","animFrame","step","xCell","ownerId","sound","push","melodySequence","nextDiv","bassSequence","percSequence","Object","keys","includes","toString","constructEggSounds","vol","Math","abs","number","floor","position","x","playerWidth","drone","volume","rampTo","prevStage","palettes","indexOf","length","positionIsInPlayer","bounce","triggerAttackRelease","hp","ammo","shadowId","getNewShadowId","y","pal","pos","playerQuantizedPosition","paletteAttributes","gridWidth","gridHeight","scale","pitch","dur","subdivision","notes","queryNotes","yCell","newNote","vel","inputId","addObjectToWorld","triggerRelease","break","Reverb","toMaster","delay","FeedbackDelay","generate","events","i","melodySynth","PolySynth","Synth","Sequence","time","melody","seqStep","playNoteArrayOnSynth","bassSynth","AMSynth","bass","percSynth","FMSynth","perc","synth","oscillator","type","envelope","attack","decay","sustain","release","NoiseSynth","noise","breakSynth","playNoteOnSynth","connect","triggerAttack","loop","octaveShift","degree","octave","noteArray","div","getSecondsAtTime","nextSubdivision","ClientEngine"],"mappings":"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","sourcesContent":["import { ClientEngine, KeyboardControls } from 'lance-gg';\nimport SyncClient from '@ircam/sync/client';\nimport InterferenceRenderer from '../client/InterferenceRenderer';\nimport Note from '../common/Note';\nimport Performer from '../common/Performer';\nimport Egg from '../common/Egg';\nimport { Transport, Frequency, Sequence, Loop, Synth, MonoSynth, PolySynth, NoiseSynth, FMSynth, AMSynth, MetalSynth } from 'tone';\nimport { Reverb, FeedbackDelay, BitCrusher, AutoWah } from 'tone';\n\nexport default class InterferenceClientEngine extends ClientEngine {\n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// INITIALIZATION AND CONNECTION\n    constructor(gameEngine, options) {\n        super(gameEngine, options, InterferenceRenderer);\n\n        this.syncClient = null;\n        this.transport = Transport;\n        this.player = null;\n        this.room = null;\n        this.players = [];\n        this.eggs = [];\n        this.eggSounds = {};\n        this.performanceView = false;\n        this.viewLock = false;\n        this.controls = new KeyboardControls(this);\n        this.prevState = 'setup';\n        this.fullscreen = false;\n        this.optionSelection = {};\n        this.localControls = {\n            //'Backquote': 'ToggleTransport',\n            'KeyF': 'ToggleFullscreen',\n            'KeyH': 'ToggleCursor',\n            'KeyV': 'ToggleView',\n            'Slash': 'ToggleLock'\n        };\n        this.melodyStep = 0;\n        this.bassStep = 0;\n        this.percStep = 0;\n        this.sequences = {};\n\n        this.gameEngine.on('client__postStep', this.stepLogic.bind(this));\n        this.gameEngine.on('updatePalette', () => { this.onUpdatePalette() });\n        this.gameEngine.on('eggBounce', e => { this.onEggBounce(e) });\n        this.gameEngine.on('playerHitEgg', e => { this.onPlayerHitEgg(e) });\n        this.gameEngine.on('eggBroke', e => { this.onEggBroke(e) });\n    }\n\n    executeLocalControl(controlString) {\n        if (controlString === 'ToggleTransport') {\n            if (this.transport.state !== 'started') {\n                this.transport.start();\n                this.transport.seconds = this.syncClient.getSyncTime();\n                //this.sequencerLoop(0);\n            }   \n            else {\n                this.transport.pause();\n            }\n        }\n        else if (controlString === 'ToggleFullscreen') {\n            if (!this.viewLock) {\n                let elem = this.renderer.canvas;\n                if (!document.fullscreenElement) {\n                    elem.requestFullscreen({navigationUI: 'hide'}).then({}).catch(err => {\n                        //alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\n                    });\n                } else {\n                    document.exitFullscreen();\n                }\n            }\n        }\n        else if (controlString === 'ToggleCursor') {\n            if (!this.viewLock) {\n                if (document.pointerLockElement === document.body || \n                    document.mozPointerLockElement === document.body) {\n                    document.exitPointerLock();\n                } else {\n                    document.body.requestPointerLock();\n                }\n            }\n        }\n        else if (controlString === 'ToggleView') {\n            //console.log('view');\n            if (!this.viewLock) this.performanceView = !this.performanceView;\n        }\n        else if (controlString === 'ToggleLock') {\n            //console.log('lock');\n            this.viewLock = !this.viewLock;\n        }\n    }\n\n    executeOption(optionString) {\n        console.log(optionString);\n    }\n\n    start() {\n        super.start()\n\n        let btn = document.getElementById('startButton');\n        let roomNameInput = document.getElementById('roomNameInput');\n        let roomNameErrorText = document.querySelector('#startMenu .room-input-error');\n\n        btn.onclick = () => {\n            let regex = /^\\w+$/;\n            if (regex.exec(roomNameInput.value) != null) {\n                this.assignToRoom(roomNameInput.value.substring(0, 20));\n            } else {\n                roomNameErrorText.style.display = 'inline';\n            }\n        };\n\n        document.body.requestPointerLock = document.body.requestPointerLock || document.body.mozRequestPointerLock;\n\n        // LOCAL CONTROLS\n        // Any inputs that do nothing server-side (i.e. doesn't need to be known by other players)\n        document.addEventListener('keypress', e => {\n            //console.log(e.code);\n            if (document.activeElement === roomNameInput) {\n                if (e.code === 'Enter') {\n                    let regex = /^\\w+$/;\n                    if (regex.exec(roomNameInput.value) != null) {\n                        this.assignToRoom(roomNameInput.value.substring(0, 20));\n                    } else {\n                        roomNameErrorText.style.display = 'inline';\n                    }\n                }\n            }\n            else {\n                if (this.optionSelection[e.code]) {\n                    this.executeOption(this.optionSelection[e.code]);\n                }\n                if (this.localControls[e.code]) {\n                    this.executeLocalControl(this.localControls[e.code]);\n                }\n            }\n        });\n    }\n\n    connect(options = {}) {\n        return super.connect().then(() => {\n            this.socket.on('assignedRoom', roomName => { \n                this.room = roomName;\n                this.transport.start();\n                this.startSyncClient(this.socket);\n            });\n        });\n    }\n\n    startSyncClient(socket) {\n        const startTime = performance.now();\n        this.syncClient = new SyncClient(() => { return (performance.now() - startTime) / 1000 });\n        this.syncClient.start(\n            // send function\n            (pingId, clientPingTime) => {\n                var request = [];\n                request[0] = 0; // we send a ping\n                request[1] = pingId;\n                request[2] = clientPingTime;\n\n                //console.log('[ping] - id: %s, pingTime: %s', request[1], request[2]);\n\n                this.socket.emit('syncClientData', request);\n            },       \n            // receive function  \n            callback => {\n                // unpack args before executing the callback\n                this.socket.on('syncServerData', function (data) {\n                    var response = data;\n\n                    if (response[0] === 1) { // this is a pong\n                        var pingId = response[1];\n                        var clientPingTime = response[2];\n                        var serverPingTime = response[3];\n                        var serverPongTime = response[4];\n\n                        //console.log('[pong] - id: %s, clientPingTime: %s, serverPingTime: %s, serverPongTime: %s',\n                        //pingId, clientPingTime, serverPingTime, serverPongTime);\n\n                        callback(pingId, clientPingTime, serverPingTime, serverPongTime);\n                    }\n                });\n            }, \n            // status report function\n            status => { }//console.log(status); }\n        );\n    }\n\n    assignToRoom(roomName) {\n        if (this.socket) {\n            this.socket.emit('assignToRoom', roomName);\n            document.getElementById('startMenuWrapper').style.display = 'none';\n            // NETWORKED CONTROLS\n            // These inputs will also be processed on the server\n            //console.log('binding keys');\n            //this.controls.bindKey('space', 'space');\n            this.controls.bindKey('open bracket', '[');\n            this.controls.bindKey('close bracket / å', ']');\n            this.controls.bindKey('n', 'n');\n            this.controls.bindKey('b', 'b'); // begin\n            this.controls.bindKey('c', 'c'); // change color\n            this.controls.bindKey('q', 'q');\n            this.controls.bindKey('w', 'w');\n            this.controls.bindKey('e', 'e');\n        }\n    } \n\n    ///////////////////////////////////////////////////////////////////////////////////////////\n    /// SOUND HANDLING AND CLIENT LOGIC\n\n    /// STEP\n\n    stepLogic() {\n        if (this.room == null) return; //if we've yet to be assigned a room, don't do this stuff\n\n        this.player = this.gameEngine.world.queryObject({ playerId: this.gameEngine.playerId });\n        if (this.player == null) return;\n\n        if (this.player != null && this.reverb == null && this.player.palette != 0) this.initSound(this.player);\n\n        this.players = this.gameEngine.world.queryObjects({ instanceType: Performer });\n        for (let p of this.players) {\n            if (p.gridString != null) p.grid = JSON.parse(p.gridString);\n        }\n\n        this.eggs = this.gameEngine.world.queryObjects({ instanceType: Egg });\n\n        let stage = this.player.stage;\n\n        this.sequences = {};\n        for (let note of this.gameEngine.world.queryObjects({ instanceType: Note })) {\n            if (note.id >= this.gameEngine.options.clientIDSpace) {\n                let serverCopy = this.gameEngine.resolveShadowObject(note);\n                if (serverCopy != null) {\n                    serverCopy.animFrame = note.animFrame;\n                    continue;\n                }\n            }\n            note.step = note.xCell;\n            if (this.sequences[note.ownerId] == null) this.sequences[note.ownerId] = {};\n            if (this.sequences[note.ownerId].player == null) this.sequences[note.ownerId].player = this.gameEngine.world.queryObject({ playerId: note.ownerId });\n            if (this.sequences[note.ownerId][note.sound] == null) this.sequences[note.ownerId][note.sound] = [];\n            if (this.sequences[note.ownerId][note.sound][note.step] == null) this.sequences[note.ownerId][note.sound][note.step] = [];\n            this.sequences[note.ownerId][note.sound][note.step].push(note);\n        }\n\n        if (stage === 'setup') {\n\n        }\n        else if (stage === 'intro') {\n            if (this.transport.state !== 'started') {// && this.prevStage !== stage) {\n                this.transport.start();\n                this.transport.seconds = this.syncClient.getSyncTime();\n            }\n            if (this.melodySequence.state !== 'started') {\n                //console.log('start seq');\n                this.melodySequence.start(this.nextDiv('1m'));\n            }\n            if (this.bassSequence.state !== 'started') {\n                //console.log('start seq');\n                this.bassSequence.start(this.nextDiv('1m'));\n            }\n            if (this.percSequence.state !== 'started') {\n                //console.log('start seq');\n                this.percSequence.start(this.nextDiv('1m'));\n            }\n            for (let e of this.eggs) {\n                if (!Object.keys(this.eggSounds).includes(e.toString())) this.constructEggSounds(e);\n                let vol = 1 - (0.5 * Math.abs(this.player.number - Math.floor(e.position.x / this.gameEngine.playerWidth)));\n                if (vol < 0) vol = 0;\n                this.eggSounds[e.toString()].drone.volume.rampTo(vol, 0.1);\n            }\n        }\n        this.prevStage = stage;\n    }\n\n    /// GAME EVENTS\n\n    onUpdatePalette() {\n        let palettes = this.gameEngine.palettes;\n        this.player.palette = palettes[(palettes.indexOf(this.player.palette) + 1) % palettes.length];\n        this.socket.emit('updatePalette', this.player.palette);\n    }\n\n    onEggBounce(e) {\n        if (!Object.keys(this.eggSounds).includes(e.toString())) this.constructEggSounds(e);\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSounds[e.toString()].bounce.triggerAttackRelease('8n');\n        }\n    }\n\n    onPlayerHitEgg(e) {\n        let p = this.player;\n        if (e.hp <= 0) return;\n        if (p.ammo <= 0) return;\n        p.ammo--;\n        e.hp--;\n\n        let shadowId = this.gameEngine.getNewShadowId();\n        this.socket.emit('playerHitEgg', p.ammo, e.id, e.hp, e.position.x, e.position.y, e.sound, shadowId);\n        let pal = p.palette;\n        let pos = this.gameEngine.playerQuantizedPosition(p, e.position.x, e.position.y, \n            this.gameEngine.paletteAttributes[pal].gridWidth, this.gameEngine.paletteAttributes[pal].gridHeight);\n        let scale = this.gameEngine.paletteAttributes[pal].scale; //TODO should base this on palette of the cell?\n        let pitch = (this.gameEngine.paletteAttributes[pal].gridHeight - pos[1]) + (scale.length * 4);\n        let dur = this.gameEngine.paletteAttributes[pal][e.sound].subdivision;\n\n        let notes = this.gameEngine.queryNotes({            \n            ownerId: p.playerId, \n            palette: pal,\n            sound: e.sound, \n            pitch: pitch, \n            //vel: 1, \n            xCell: pos[0], \n            yCell: pos[1] \n        });\n        if (notes.length) notes[0].dur = '2n';\n        else {\n            let newNote = new Note(this.gameEngine, null, { \n                id: shadowId,\n                ownerId: p.playerId, \n                palette: pal,\n                sound: e.sound, \n                pitch: pitch, \n                dur: dur,\n                vel: 1, \n                xCell: pos[0], \n                yCell: pos[1] \n            });\n            newNote.inputId = shadowId;\n            this.gameEngine.addObjectToWorld(newNote);\n        }\n    }\n\n    onEggBroke(e) {\n        console.log('egg broke');\n        this.eggSounds[e.toString()].drone.triggerRelease();\n        if (this.gameEngine.positionIsInPlayer(e.position.x, this.player)) {\n            this.eggSounds[e.toString()].break.start(this.nextDiv('4n'));\n            this.optionSelection['Digit1'] = 'tetrisChain';\n        }\n    }\n\n    //// SOUND\n\n    initSound(p) {\n\n        //this.transport.timeSignature = 4;\n\n        this.reverb = new Reverb(5).toMaster();\n        this.delay = new FeedbackDelay();\n        //this.bitcrusher = new BitCrusher(4).connect(this.reverb); \n        this.reverb.generate();\n        //this.bitcrusher.start();\n        /*\n        this.synth = new Synth({\n            oscillator: {\n                type: 'sine',\n            },\n            envelope: {\n                attack: 0,\n                decay: 0.1,\n                sustain: 0,\n                release: 0.1,\n            }\n        }).toMaster();\n        */\n        let pal = this.gameEngine.paletteAttributes[p.palette];\n\n        let events = []\n        for (let i = 0; i < this.gameEngine.paletteAttributes[p.palette].gridWidth; i++) {\n           events.push(i);\n        }\n\n        this.melodySynth = new PolySynth(pal.gridHeight, Synth).toMaster();\n\n        this.melodySequence = new Sequence((time, step) => {\n            this.melodyStep = step;\n            if (this.sequences[this.player.playerId] == null) return;\n            if (this.sequences[this.player.playerId].melody == null) return;\n            let seqStep = this.sequences[this.player.playerId].melody[this.melodyStep];\n            if (seqStep) this.playNoteArrayOnSynth(this.melodySynth, seqStep, pal.scale, 2, time, true);\n        }, events, pal.melody.subdivision);\n\n\n        this.bassSynth = new PolySynth(pal.gridHeight, AMSynth).toMaster();\n\n        this.bassSequence = new Sequence((time, step) => {\n            this.bassStep = step; \n            if (this.sequences[this.player.playerId] == null) return;\n            if (this.sequences[this.player.playerId].bass == null) return;\n            let seqStep = this.sequences[this.player.playerId].bass[this.bassStep];\n            if (seqStep) this.playNoteArrayOnSynth(this.bassSynth, seqStep, pal.scale, -2, time, true);       \n        }, events, pal.bass.subdivision);\n\n\n        this.percSynth = new PolySynth(pal.gridHeight, FMSynth).toMaster();\n\n        this.percSequence = new Sequence((time, step) => {\n            this.percStep = step;\n            if (this.sequences[this.player.playerId] == null) return;\n            if (this.sequences[this.player.playerId].perc == null) return;\n            let seqStep = this.sequences[this.player.playerId].perc[this.percStep];\n            if (seqStep) this.playNoteArrayOnSynth(this.percSynth, seqStep, pal.scale, 0, time, true);\n        }, events, pal.perc.subdivision);\n    }\n\n    constructEggSounds(e) {\n        let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n\n        if (e.sound === 'melody') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSounds[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playNoteOnSynth(synth, note, scale, 6, '64n', time, 0.5);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n        else if (e.sound === 'bass') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSounds[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playNoteOnSynth(synth, note, scale, 6, '64n', time, 0.5);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n        else if (e.sound === 'perc') {\n            let synth = new Synth({\n                oscillator: {\n                    type: 'triangle',\n                },\n                envelope: {\n                    attack: 0.005,\n                    decay: 0.5,\n                    sustain: 0,\n                    release: 0.1,\n                }\n            });\n            this.eggSounds[e.toString()] = {\n                drone: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 1,\n                        decay: 0.1,\n                        sustain: 1,\n                        release: 0.5,\n                    }\n                }),\n                bounce: new NoiseSynth({\n                    noise: {\n                        type: 'pink',\n                    },\n                    envelope: {\n                        attack: 0.01,\n                        decay: 0.3,\n                        sustain: 0.1,\n                        release: 0.5,\n                    }\n                }).toMaster(),\n                breakSynth: synth.toMaster(), \n                break: new Sequence((time, note) => {\n                    let scale = this.gameEngine.paletteAttributes[this.player.palette].scale;\n                    this.playNoteOnSynth(synth, note, scale, 6, '64n', time, 0.5);\n                }, [[0, 1, 2, 3, 1, 2, 3, 4], null, null, null], '4n')\n            };\n        }\n\n        this.eggSounds[e.toString()].drone.connect(this.reverb);\n        this.eggSounds[e.toString()].bounce.connect(this.reverb);\n        this.eggSounds[e.toString()].breakSynth.connect(this.reverb);\n        this.eggSounds[e.toString()].drone.triggerAttack('+0', 0.1);\n        this.eggSounds[e.toString()].break.loop = true;\n    }\n\n    playNoteOnSynth(synth, note, scale, octaveShift, dur, time, vel) {\n        if (!note) return;\n        //console.log(note);\n        let degree = note % scale.length;\n        let octave = Math.floor(note / scale.length) + octaveShift;\n        let pitch = Frequency(scale[degree] + (12 * octave), 'midi');\n        //console.log(scale[degree] + (12 * octave));\n        synth.triggerAttackRelease(pitch, dur, time, vel);\n    }\n\n    playNoteArrayOnSynth(synth, noteArray, scale, octaveShift, time) {\n        if (!noteArray) return;\n\n        //console.log(note);\n        for (let note of noteArray) {\n            //let scale = this.gameEngine.paletteAttributes[this.player.grid[note.cell.x][note.cell.y]];\n            this.playNoteOnSynth(synth, note.pitch, scale, octaveShift, note.dur, time, note.vel);\n        }\n    }\n\n    nextDiv(div) {\n        return Transport.getSecondsAtTime(Transport.nextSubdivision(div));\n    }\n}\n"],"file":"InterferenceClientEngine.js"}